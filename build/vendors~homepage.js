exports.ids = ["vendors~homepage"];
exports.modules = {

/***/ "./node_modules/@fullcalendar/resource-common/main.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/@fullcalendar/resource-common/main.esm.js ***!
  \****************************************************************/
/*! exports provided: default, AbstractResourceDayTable, DayResourceTable, ResourceApi, ResourceDayHeader, ResourceDayTable, ResourceSplitter, VResourceJoiner, VResourceSplitter, buildResourceFields, buildResourceTextFunc, buildRowNodes, flattenResources, isGroupsEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractResourceDayTable\", function() { return AbstractResourceDayTable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DayResourceTable\", function() { return DayResourceTable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResourceApi\", function() { return ResourceApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResourceDayHeader\", function() { return ResourceDayHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResourceDayTable\", function() { return ResourceDayTable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResourceSplitter\", function() { return ResourceSplitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VResourceJoiner\", function() { return VResourceJoiner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VResourceSplitter\", function() { return VResourceSplitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildResourceFields\", function() { return buildResourceFields; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildResourceTextFunc\", function() { return buildResourceTextFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildRowNodes\", function() { return buildRowNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flattenResources\", function() { return flattenResources; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isGroupsEqual\", function() { return isGroupsEqual; });\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/core */ \"@fullcalendar/core\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__);\n/*!\nFullCalendar Resources Common Plugin v4.3.1\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2019 Adam Shaw\n*/\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n    var resource0 = hit0.dateSpan.resourceId;\n    var resource1 = hit1.dateSpan.resourceId;\n    if (resource0 && resource1 &&\n        resource0 !== resource1) {\n        eventMutation.resourceMutation = {\n            matchResourceId: resource0,\n            setResourceId: resource1\n        };\n    }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, calendar) {\n    var resourceMutation = mutation.resourceMutation;\n    if (resourceMutation && computeResourceEditable(eventDef, calendar)) {\n        var index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n        if (index !== -1) {\n            var resourceIds = eventDef.resourceIds.slice(); // copy\n            resourceIds.splice(index, 1); // remove\n            if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n                resourceIds.push(resourceMutation.setResourceId); // add\n            }\n            eventDef.resourceIds = resourceIds;\n        }\n    }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, calendar) {\n    var resourceEditable = eventDef.resourceEditable;\n    if (resourceEditable == null) {\n        var source = eventDef.sourceId && calendar.state.eventSources[eventDef.sourceId];\n        if (source) {\n            resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n        }\n        if (resourceEditable == null) {\n            resourceEditable = calendar.opt('eventResourceEditable');\n            if (resourceEditable == null) {\n                resourceEditable = calendar.opt('editable'); // TODO: use defaults system instead\n            }\n        }\n    }\n    return resourceEditable;\n}\nfunction transformEventDrop(mutation, calendar) {\n    var resourceMutation = mutation.resourceMutation;\n    if (resourceMutation) {\n        return {\n            oldResource: calendar.getResourceById(resourceMutation.matchResourceId),\n            newResource: calendar.getResourceById(resourceMutation.setResourceId)\n        };\n    }\n    else {\n        return {\n            oldResource: null,\n            newResource: null\n        };\n    }\n}\n\nvar ResourceDataAdder = /** @class */ (function () {\n    function ResourceDataAdder() {\n        this.filterResources = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(filterResources);\n    }\n    ResourceDataAdder.prototype.transform = function (viewProps, viewSpec, calendarProps, view) {\n        if (viewSpec.class.needsResourceData) {\n            return {\n                resourceStore: this.filterResources(calendarProps.resourceStore, view.opt('filterResourcesWithEvents'), calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n                resourceEntityExpansions: calendarProps.resourceEntityExpansions\n            };\n        }\n    };\n    return ResourceDataAdder;\n}());\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n    if (doFilterResourcesWithEvents) {\n        var instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n        var hasEvents_1 = computeHasEvents(instancesInRange, eventStore.defs);\n        __assign(hasEvents_1, computeAncestorHasEvents(hasEvents_1, resourceStore));\n        return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"filterHash\"])(resourceStore, function (resource, resourceId) {\n            return hasEvents_1[resourceId];\n        });\n    }\n    else {\n        return resourceStore;\n    }\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n    return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"filterHash\"])(eventInstances, function (eventInstance) {\n        return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"rangesIntersect\"])(eventInstance.range, activeRange);\n    });\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n    var hasEvents = {};\n    for (var instanceId in eventInstances) {\n        var instance = eventInstances[instanceId];\n        for (var _i = 0, _a = eventDefs[instance.defId].resourceIds; _i < _a.length; _i++) {\n            var resourceId = _a[_i];\n            hasEvents[resourceId] = true;\n        }\n    }\n    return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n    var res = {};\n    for (var resourceId in hasEvents) {\n        var resource = void 0;\n        while ((resource = resourceStore[resourceId])) {\n            resourceId = resource.parentId; // now functioning as the parentId\n            if (resourceId) {\n                res[resourceId] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return res;\n}\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nvar ResourceEventConfigAdder = /** @class */ (function () {\n    function ResourceEventConfigAdder() {\n        this.buildResourceEventUis = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeOutput\"])(buildResourceEventUis, _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isPropsEqual\"]);\n        this.injectResourceEventUis = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(injectResourceEventUis);\n    }\n    ResourceEventConfigAdder.prototype.transform = function (viewProps, viewSpec, calendarProps) {\n        if (!viewSpec.class.needsResourceData) { // is a non-resource view?\n            return {\n                eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore))\n            };\n        }\n    };\n    return ResourceEventConfigAdder;\n}());\nfunction buildResourceEventUis(resourceStore) {\n    return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"mapHash\"])(resourceStore, function (resource) {\n        return resource.ui;\n    });\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n    return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"mapHash\"])(eventUiBases, function (eventUi, defId) {\n        if (defId) { // not the '' key\n            return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n        }\n        else {\n            return eventUi;\n        }\n    });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n    var parts = [];\n    // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n    for (var _i = 0, _a = eventDef.resourceIds; _i < _a.length; _i++) {\n        var resourceId = _a[_i];\n        if (resourceEventUis[resourceId]) {\n            parts.unshift(resourceEventUis[resourceId]);\n        }\n    }\n    parts.unshift(origEventUi);\n    return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"combineEventUis\"])(parts);\n}\n// for making sure events that have editable resources are always draggable in resource views\nfunction transformIsDraggable(val, eventDef, eventUi, view) {\n    if (!val) {\n        if (view.viewSpec.class.needsResourceData) {\n            if (computeResourceEditable(eventDef, view.calendar)) {\n                return true;\n            }\n        }\n    }\n    return val;\n}\n\nvar RESOURCE_SOURCE_PROPS = {\n    id: String\n};\nvar defs = [];\nvar uid = 0;\nfunction registerResourceSourceDef(def) {\n    defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n    return defs[id];\n}\nfunction doesSourceIgnoreRange(source) {\n    return Boolean(defs[source.sourceDefId].ignoreRange);\n}\nfunction parseResourceSource(input) {\n    for (var i = defs.length - 1; i >= 0; i--) { // later-added plugins take precedence\n        var def = defs[i];\n        var meta = def.parseMeta(input);\n        if (meta) {\n            var res = parseResourceSourceProps((typeof input === 'object' && input) ? input : {}, meta, i);\n            res._raw = input;\n            return res;\n        }\n    }\n    return null;\n}\nfunction parseResourceSourceProps(input, meta, sourceDefId) {\n    var props = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"refineProps\"])(input, RESOURCE_SOURCE_PROPS);\n    props.sourceId = String(uid++);\n    props.sourceDefId = sourceDefId;\n    props.meta = meta;\n    props.publicId = props.id;\n    props.isFetching = false;\n    props.latestFetchId = '';\n    props.fetchRange = null;\n    delete props.id;\n    return props;\n}\n\nfunction reduceResourceSource (source, action, dateProfile, calendar) {\n    switch (action.type) {\n        case 'INIT':\n            return createSource(calendar.opt('resources'), calendar);\n        case 'RESET_RESOURCE_SOURCE':\n            return createSource(action.resourceSourceInput, calendar, true);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'SET_DATE':\n        case 'SET_VIEW_TYPE':\n            return handleRange(source, dateProfile.activeRange, calendar);\n        case 'RECEIVE_RESOURCES':\n        case 'RECEIVE_RESOURCE_ERROR':\n            return receiveResponse(source, action.fetchId, action.fetchRange);\n        case 'REFETCH_RESOURCES':\n            return fetchSource(source, dateProfile.activeRange, calendar);\n        default:\n            return source;\n    }\n}\nvar uid$1 = 0;\nfunction createSource(input, calendar, forceFetch) {\n    if (input) {\n        var source = parseResourceSource(input);\n        if (forceFetch || !calendar.opt('refetchResourcesOnNavigate')) { // because assumes handleRange will do it later\n            source = fetchSource(source, null, calendar);\n        }\n        return source;\n    }\n    return null;\n}\nfunction handleRange(source, activeRange, calendar) {\n    if (calendar.opt('refetchResourcesOnNavigate') &&\n        !doesSourceIgnoreRange(source) &&\n        (!source.fetchRange || !Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"rangesEqual\"])(source.fetchRange, activeRange))) {\n        return fetchSource(source, activeRange, calendar);\n    }\n    else {\n        return source;\n    }\n}\nfunction fetchSource(source, fetchRange, calendar) {\n    var sourceDef = getResourceSourceDef(source.sourceDefId);\n    var fetchId = String(uid$1++);\n    sourceDef.fetch({\n        resourceSource: source,\n        calendar: calendar,\n        range: fetchRange\n    }, function (res) {\n        // HACK\n        // do before calling dispatch in case dispatch renders synchronously\n        calendar.afterSizingTriggers._resourcesRendered = [null]; // fire once\n        calendar.dispatch({\n            type: 'RECEIVE_RESOURCES',\n            fetchId: fetchId,\n            fetchRange: fetchRange,\n            rawResources: res.rawResources\n        });\n    }, function (error) {\n        calendar.dispatch({\n            type: 'RECEIVE_RESOURCE_ERROR',\n            fetchId: fetchId,\n            fetchRange: fetchRange,\n            error: error\n        });\n    });\n    return __assign({}, source, { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n    if (fetchId === source.latestFetchId) {\n        return __assign({}, source, { isFetching: false, fetchRange: fetchRange });\n    }\n    return source;\n}\n\nvar RESOURCE_PROPS = {\n    id: String,\n    title: String,\n    parentId: String,\n    businessHours: null,\n    children: null,\n    extendedProps: null\n};\nvar PRIVATE_ID_PREFIX = '_fc:';\nvar uid$2 = 0;\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(input, parentId, store, calendar) {\n    if (parentId === void 0) { parentId = ''; }\n    var leftovers0 = {};\n    var props = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"refineProps\"])(input, RESOURCE_PROPS, {}, leftovers0);\n    var leftovers1 = {};\n    var ui = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"processScopedUiProps\"])('event', leftovers0, calendar, leftovers1);\n    if (!props.id) {\n        props.id = PRIVATE_ID_PREFIX + (uid$2++);\n    }\n    if (!props.parentId) { // give precedence to the parentId property\n        props.parentId = parentId;\n    }\n    props.businessHours = props.businessHours ? Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"parseBusinessHours\"])(props.businessHours, calendar) : null;\n    props.ui = ui;\n    props.extendedProps = __assign({}, leftovers1, props.extendedProps);\n    // help out ResourceApi from having user modify props\n    Object.freeze(ui.classNames);\n    Object.freeze(props.extendedProps);\n    if (store[props.id]) ;\n    else {\n        store[props.id] = props;\n        if (props.children) {\n            for (var _i = 0, _a = props.children; _i < _a.length; _i++) {\n                var childInput = _a[_i];\n                parseResource(childInput, props.id, store, calendar);\n            }\n            delete props.children;\n        }\n    }\n    return props;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n    if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n        return '';\n    }\n    return id;\n}\n\nfunction reduceResourceStore (store, action, source, calendar) {\n    switch (action.type) {\n        case 'INIT':\n            return {};\n        case 'RECEIVE_RESOURCES':\n            return receiveRawResources(store, action.rawResources, action.fetchId, source, calendar);\n        case 'ADD_RESOURCE':\n            return addResource(store, action.resourceHash);\n        case 'REMOVE_RESOURCE':\n            return removeResource(store, action.resourceId);\n        case 'SET_RESOURCE_PROP':\n            return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n        case 'RESET_RESOURCES':\n            // must make the calendar think each resource is a new object :/\n            return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"mapHash\"])(store, function (resource) {\n                return __assign({}, resource);\n            });\n        default:\n            return store;\n    }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, calendar) {\n    if (source.latestFetchId === fetchId) {\n        var nextStore = {};\n        for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n            var input = inputs_1[_i];\n            parseResource(input, '', nextStore, calendar);\n        }\n        return nextStore;\n    }\n    else {\n        return existingStore;\n    }\n}\nfunction addResource(existingStore, additions) {\n    // TODO: warn about duplicate IDs\n    return __assign({}, existingStore, additions);\n}\nfunction removeResource(existingStore, resourceId) {\n    var newStore = __assign({}, existingStore);\n    delete newStore[resourceId];\n    // promote children\n    for (var childResourceId in newStore) { // a child, *maybe* but probably not\n        if (newStore[childResourceId].parentId === resourceId) {\n            newStore[childResourceId] = __assign({}, newStore[childResourceId], { parentId: '' });\n        }\n    }\n    return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n    var _a, _b;\n    var existingResource = existingStore[resourceId];\n    // TODO: sanitization\n    if (existingResource) {\n        return __assign({}, existingStore, (_a = {}, _a[resourceId] = __assign({}, existingResource, (_b = {}, _b[name] = value, _b)), _a));\n    }\n    else {\n        return existingStore;\n    }\n}\n\nfunction reduceResourceEntityExpansions(expansions, action) {\n    var _a;\n    switch (action.type) {\n        case 'INIT':\n            return {};\n        case 'SET_RESOURCE_ENTITY_EXPANDED':\n            return __assign({}, expansions, (_a = {}, _a[action.id] = action.isExpanded, _a));\n        default:\n            return expansions;\n    }\n}\n\nfunction resourcesReducers (state, action, calendar) {\n    var resourceSource = reduceResourceSource(state.resourceSource, action, state.dateProfile, calendar);\n    var resourceStore = reduceResourceStore(state.resourceStore, action, resourceSource, calendar);\n    var resourceEntityExpansions = reduceResourceEntityExpansions(state.resourceEntityExpansions, action);\n    return __assign({}, state, { resourceSource: resourceSource,\n        resourceStore: resourceStore,\n        resourceEntityExpansions: resourceEntityExpansions });\n}\n\nvar RESOURCE_RELATED_PROPS = {\n    resourceId: String,\n    resourceIds: function (items) {\n        return (items || []).map(function (item) {\n            return String(item);\n        });\n    },\n    resourceEditable: Boolean\n};\nfunction parseEventDef(def, props, leftovers) {\n    var resourceRelatedProps = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"refineProps\"])(props, RESOURCE_RELATED_PROPS, {}, leftovers);\n    var resourceIds = resourceRelatedProps.resourceIds;\n    if (resourceRelatedProps.resourceId) {\n        resourceIds.push(resourceRelatedProps.resourceId);\n    }\n    def.resourceIds = resourceIds;\n    def.resourceEditable = resourceRelatedProps.resourceEditable;\n}\n\nfunction transformDateSelectionJoin(hit0, hit1) {\n    var resourceId0 = hit0.dateSpan.resourceId;\n    var resourceId1 = hit1.dateSpan.resourceId;\n    if (resourceId0 && resourceId1) {\n        if (hit0.component.allowAcrossResources === false &&\n            resourceId0 !== resourceId1) {\n            return false;\n        }\n        else {\n            return { resourceId: resourceId0 };\n        }\n    }\n}\n\nvar ResourceApi = /** @class */ (function () {\n    function ResourceApi(calendar, rawResource) {\n        this._calendar = calendar;\n        this._resource = rawResource;\n    }\n    ResourceApi.prototype.setProp = function (name, value) {\n        this._calendar.dispatch({\n            type: 'SET_RESOURCE_PROP',\n            resourceId: this._resource.id,\n            propName: name,\n            propValue: value\n        });\n    };\n    ResourceApi.prototype.remove = function () {\n        this._calendar.dispatch({\n            type: 'REMOVE_RESOURCE',\n            resourceId: this._resource.id\n        });\n    };\n    ResourceApi.prototype.getParent = function () {\n        var calendar = this._calendar;\n        var parentId = this._resource.parentId;\n        if (parentId) {\n            return new ResourceApi(calendar, calendar.state.resourceSource[parentId]);\n        }\n        else {\n            return null;\n        }\n    };\n    ResourceApi.prototype.getChildren = function () {\n        var thisResourceId = this._resource.id;\n        var calendar = this._calendar;\n        var resourceStore = calendar.state.resourceStore;\n        var childApis = [];\n        for (var resourceId in resourceStore) {\n            if (resourceStore[resourceId].parentId === thisResourceId) {\n                childApis.push(new ResourceApi(calendar, resourceStore[resourceId]));\n            }\n        }\n        return childApis;\n    };\n    /*\n    this is really inefficient!\n    TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n    */\n    ResourceApi.prototype.getEvents = function () {\n        var thisResourceId = this._resource.id;\n        var calendar = this._calendar;\n        var _a = calendar.state.eventStore, defs = _a.defs, instances = _a.instances;\n        var eventApis = [];\n        for (var instanceId in instances) {\n            var instance = instances[instanceId];\n            var def = defs[instance.defId];\n            if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n                eventApis.push(new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"EventApi\"](calendar, def, instance));\n            }\n        }\n        return eventApis;\n    };\n    Object.defineProperty(ResourceApi.prototype, \"id\", {\n        get: function () { return this._resource.id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"title\", {\n        get: function () { return this._resource.title; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventConstraint\", {\n        get: function () { return this._resource.ui.constraints[0] || null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventOverlap\", {\n        get: function () { return this._resource.ui.overlap; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventAllow\", {\n        get: function () { return this._resource.ui.allows[0] || null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventBackgroundColor\", {\n        get: function () { return this._resource.ui.backgroundColor; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventBorderColor\", {\n        get: function () { return this._resource.ui.borderColor; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventTextColor\", {\n        get: function () { return this._resource.ui.textColor; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"eventClassNames\", {\n        // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n        get: function () { return this._resource.ui.classNames; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceApi.prototype, \"extendedProps\", {\n        get: function () { return this._resource.extendedProps; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResourceApi;\n}());\n\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.addResource = function (input, scrollTo) {\n    var _a;\n    if (scrollTo === void 0) { scrollTo = true; }\n    var resourceHash;\n    var resource;\n    if (input instanceof ResourceApi) {\n        resource = input._resource;\n        resourceHash = (_a = {}, _a[resource.id] = resource, _a);\n    }\n    else {\n        resourceHash = {};\n        resource = parseResource(input, '', resourceHash, this);\n    }\n    // HACK\n    if (scrollTo) {\n        this.component.view.addScroll({ forcedRowId: resource.id });\n    }\n    this.dispatch({\n        type: 'ADD_RESOURCE',\n        resourceHash: resourceHash\n    });\n    return new ResourceApi(this, resource);\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.getResourceById = function (id) {\n    id = String(id);\n    if (this.state.resourceStore) { // guard against calendar with no resource functionality\n        var rawResource = this.state.resourceStore[id];\n        if (rawResource) {\n            return new ResourceApi(this, rawResource);\n        }\n    }\n    return null;\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.getResources = function () {\n    var resourceStore = this.state.resourceStore;\n    var resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (var resourceId in resourceStore) {\n            resourceApis.push(new ResourceApi(this, resourceStore[resourceId]));\n        }\n    }\n    return resourceApis;\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.getTopLevelResources = function () {\n    var resourceStore = this.state.resourceStore;\n    var resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (var resourceId in resourceStore) {\n            if (!resourceStore[resourceId].parentId) {\n                resourceApis.push(new ResourceApi(this, resourceStore[resourceId]));\n            }\n        }\n    }\n    return resourceApis;\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.rerenderResources = function () {\n    this.dispatch({\n        type: 'RESET_RESOURCES'\n    });\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"].prototype.refetchResources = function () {\n    this.dispatch({\n        type: 'REFETCH_RESOURCES'\n    });\n};\nfunction transformDatePoint(dateSpan, calendar) {\n    return dateSpan.resourceId ?\n        { resource: calendar.getResourceById(dateSpan.resourceId) } :\n        {};\n}\nfunction transformDateSpan(dateSpan, calendar) {\n    return dateSpan.resourceId ?\n        { resource: calendar.getResourceById(dateSpan.resourceId) } :\n        {};\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nvar ResourceSplitter = /** @class */ (function (_super) {\n    __extends(ResourceSplitter, _super);\n    function ResourceSplitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourceSplitter.prototype.getKeyInfo = function (props) {\n        return __assign({ '': {} }, props.resourceStore // already has `ui` and `businessHours` keys!\n        );\n    };\n    ResourceSplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n        return [dateSpan.resourceId || ''];\n    };\n    ResourceSplitter.prototype.getKeysForEventDef = function (eventDef) {\n        var resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    };\n    return ResourceSplitter;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Splitter\"]));\n\nfunction isPropsValidWithResources(props, calendar) {\n    var splitter = new ResourceSplitter();\n    var sets = splitter.splitProps(__assign({}, props, { resourceStore: calendar.state.resourceStore }));\n    for (var resourceId in sets) {\n        var props_1 = sets[resourceId];\n        // merge in event data from the non-resource segment\n        if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n            props_1 = __assign({}, props_1, { eventStore: Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"mergeEventStores\"])(sets[''].eventStore, props_1.eventStore), eventUiBases: __assign({}, sets[''].eventUiBases, props_1.eventUiBases) });\n        }\n        if (!Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isPropsValid\"])(props_1, calendar, { resourceId: resourceId }, filterConfig.bind(null, resourceId))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction filterConfig(resourceId, config) {\n    return __assign({}, config, { constraints: filterConstraints(resourceId, config.constraints) });\n}\nfunction filterConstraints(resourceId, constraints) {\n    return constraints.map(function (constraint) {\n        var defs = constraint.defs;\n        if (defs) { // we are dealing with an EventStore\n            // if any of the events define constraints to resources that are NOT this resource,\n            // then this resource is unconditionally prohibited, which is what a `false` value does.\n            for (var defId in defs) {\n                var resourceIds = defs[defId].resourceIds;\n                if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n                    return false;\n                }\n            }\n        }\n        return constraint;\n    });\n}\n\nfunction transformExternalDef(dateSpan) {\n    return dateSpan.resourceId ?\n        { resourceId: dateSpan.resourceId } :\n        {};\n}\n\nfunction transformEventResizeJoin(hit0, hit1) {\n    var component = hit0.component;\n    if (component.allowAcrossResources === false &&\n        hit0.dateSpan.resourceId !== hit1.dateSpan.resourceId) {\n        return false;\n    }\n}\n\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"EventApi\"].prototype.getResources = function () {\n    var calendar = this._calendar;\n    return this._def.resourceIds.map(function (resourceId) {\n        return calendar.getResourceById(resourceId);\n    });\n};\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"EventApi\"].prototype.setResources = function (resources) {\n    var resourceIds = [];\n    // massage resources -> resourceIds\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n        var resource = resources_1[_i];\n        var resourceId = null;\n        if (typeof resource === 'string') {\n            resourceId = resource;\n        }\n        else if (typeof resource === 'number') {\n            resourceId = String(resource);\n        }\n        else if (resource instanceof ResourceApi) {\n            resourceId = resource.id; // guaranteed to always have an ID. hmmm\n        }\n        else {\n            console.warn('unknown resource type: ' + resource);\n        }\n        if (resourceId) {\n            resourceIds.push(resourceId);\n        }\n    }\n    this.mutate({\n        standardProps: {\n            resourceIds: resourceIds\n        }\n    });\n};\n\nvar RELEASE_DATE = '2019-08-10'; // for Scheduler\nvar UPGRADE_WINDOW = 365 + 7; // days. 1 week leeway, for tz shift reasons too\nvar LICENSE_INFO_URL = 'http://fullcalendar.io/scheduler/license/';\nvar PRESET_LICENSE_KEYS = [\n    'GPL-My-Project-Is-Open-Source',\n    'CC-Attribution-NonCommercial-NoDerivatives'\n];\nvar CSS = {\n    position: 'absolute',\n    'z-index': 99999,\n    bottom: '1px',\n    left: '1px',\n    background: '#eee',\n    'border-color': '#ddd',\n    'border-style': 'solid',\n    'border-width': '1px 1px 0 0',\n    padding: '2px 4px',\n    'font-size': '12px',\n    'border-top-right-radius': '3px'\n};\nfunction injectLicenseWarning(containerEl, calendar) {\n    var key = calendar.opt('schedulerLicenseKey');\n    if (!isImmuneUrl(window.location.href) && !isValidKey(key)) {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"appendToElement\"])(containerEl, '<div class=\"fc-license-message\" style=\"' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"cssToStr\"])(CSS)) + '\">' +\n            'Please use a valid license key. <a href=\"' + LICENSE_INFO_URL + '\">More Info</a>' +\n            '</div>');\n    }\n}\n/*\nThis decryption is not meant to be bulletproof. Just a way to remind about an upgrade.\n*/\nfunction isValidKey(key) {\n    if (PRESET_LICENSE_KEYS.indexOf(key) !== -1) {\n        return true;\n    }\n    var parts = (key || '').match(/^(\\d+)\\-fcs\\-(\\d+)$/);\n    if (parts && (parts[1].length === 10)) {\n        var purchaseDate = new Date(parseInt(parts[2], 10) * 1000);\n        var releaseDate = new Date(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"config\"].mockSchedulerReleaseDate || RELEASE_DATE);\n        if (Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isValidDate\"])(releaseDate)) { // token won't be replaced in dev mode\n            var minPurchaseDate = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"addDays\"])(releaseDate, -UPGRADE_WINDOW);\n            if (minPurchaseDate < purchaseDate) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction isImmuneUrl(url) {\n    return /\\w+\\:\\/\\/fullcalendar\\.io\\/|\\/examples\\/[\\w-]+\\.html$/.test(url);\n}\n\nvar optionChangeHandlers = {\n    resources: handleResources\n};\nfunction handleResources(newSourceInput, calendar, deepEqual) {\n    var oldSourceInput = calendar.state.resourceSource._raw;\n    if (!deepEqual(oldSourceInput, newSourceInput)) {\n        calendar.dispatch({\n            type: 'RESET_RESOURCE_SOURCE',\n            resourceSourceInput: newSourceInput\n        });\n    }\n}\n\nregisterResourceSourceDef({\n    ignoreRange: true,\n    parseMeta: function (raw) {\n        if (Array.isArray(raw)) {\n            return raw;\n        }\n        else if (Array.isArray(raw.resources)) {\n            return raw.resources;\n        }\n        return null;\n    },\n    fetch: function (arg, successCallback) {\n        successCallback({\n            rawResources: arg.resourceSource.meta\n        });\n    }\n});\n\nregisterResourceSourceDef({\n    parseMeta: function (raw) {\n        if (typeof raw === 'function') {\n            return raw;\n        }\n        else if (typeof raw.resources === 'function') {\n            return raw.resources;\n        }\n        return null;\n    },\n    fetch: function (arg, success, failure) {\n        var dateEnv = arg.calendar.dateEnv;\n        var func = arg.resourceSource.meta;\n        var publicArg = {};\n        if (arg.range) {\n            publicArg = {\n                start: dateEnv.toDate(arg.range.start),\n                end: dateEnv.toDate(arg.range.end),\n                startStr: dateEnv.formatIso(arg.range.start),\n                endStr: dateEnv.formatIso(arg.range.end),\n                timeZone: dateEnv.timeZone\n            };\n        }\n        // TODO: make more dry with EventSourceFunc\n        // TODO: accept a response?\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"unpromisify\"])(func.bind(null, publicArg), function (rawResources) {\n            success({ rawResources: rawResources }); // needs an object response\n        }, failure // send errorObj directly to failure callback\n        );\n    }\n});\n\nregisterResourceSourceDef({\n    parseMeta: function (raw) {\n        if (typeof raw === 'string') {\n            raw = { url: raw };\n        }\n        else if (!raw || typeof raw !== 'object' || !raw.url) {\n            return null;\n        }\n        return {\n            url: raw.url,\n            method: (raw.method || 'GET').toUpperCase(),\n            extraParams: raw.extraParams\n        };\n    },\n    fetch: function (arg, successCallback, failureCallback) {\n        var meta = arg.resourceSource.meta;\n        var requestParams = buildRequestParams(meta, arg.range, arg.calendar);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"requestJson\"])(meta.method, meta.url, requestParams, function (rawResources, xhr) {\n            successCallback({ rawResources: rawResources, xhr: xhr });\n        }, function (message, xhr) {\n            failureCallback({ message: message, xhr: xhr });\n        });\n    }\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, calendar) {\n    var dateEnv = calendar.dateEnv;\n    var startParam;\n    var endParam;\n    var timeZoneParam;\n    var customRequestParams;\n    var params = {};\n    if (range) {\n        // startParam = meta.startParam\n        // if (startParam == null) {\n        startParam = calendar.opt('startParam');\n        // }\n        // endParam = meta.endParam\n        // if (endParam == null) {\n        endParam = calendar.opt('endParam');\n        // }\n        // timeZoneParam = meta.timeZoneParam\n        // if (timeZoneParam == null) {\n        timeZoneParam = calendar.opt('timeZoneParam');\n        // }\n        params[startParam] = dateEnv.formatIso(range.start);\n        params[endParam] = dateEnv.formatIso(range.end);\n        if (dateEnv.timeZone !== 'local') {\n            params[timeZoneParam] = dateEnv.timeZone;\n        }\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    __assign(params, customRequestParams);\n    return params;\n}\n\nfunction buildResourceTextFunc(resourceTextSetting, calendar) {\n    if (typeof resourceTextSetting === 'function') {\n        return function (resource) {\n            return resourceTextSetting(new ResourceApi(calendar, resource));\n        };\n    }\n    else {\n        return function (resource) {\n            return resource.title || getPublicId(resource.id);\n        };\n    }\n}\n\nvar ResourceDayHeader = /** @class */ (function (_super) {\n    __extends(ResourceDayHeader, _super);\n    function ResourceDayHeader(context, parentEl) {\n        var _this = _super.call(this, context) || this;\n        _this.datesAboveResources = _this.opt('datesAboveResources');\n        _this.resourceTextFunc = buildResourceTextFunc(_this.opt('resourceText'), _this.calendar);\n        parentEl.innerHTML = ''; // because might be nbsp\n        parentEl.appendChild(_this.el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])('<div class=\"fc-row ' + _this.theme.getClass('headerRow') + '\">' +\n            '<table class=\"' + _this.theme.getClass('tableGrid') + '\">' +\n            '<thead></thead>' +\n            '</table>' +\n            '</div>'));\n        _this.thead = _this.el.querySelector('thead');\n        return _this;\n    }\n    ResourceDayHeader.prototype.destroy = function () {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.el);\n    };\n    ResourceDayHeader.prototype.render = function (props) {\n        var html;\n        this.dateFormat = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createFormatter\"])(this.opt('columnHeaderFormat') ||\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"computeFallbackHeaderFormat\"])(props.datesRepDistinctDays, props.dates.length));\n        if (props.dates.length === 1) {\n            html = this.renderResourceRow(props.resources);\n        }\n        else {\n            if (this.datesAboveResources) {\n                html = this.renderDayAndResourceRows(props.dates, props.resources);\n            }\n            else {\n                html = this.renderResourceAndDayRows(props.resources, props.dates);\n            }\n        }\n        this.thead.innerHTML = html;\n        this.processResourceEls(props.resources);\n    };\n    ResourceDayHeader.prototype.renderResourceRow = function (resources) {\n        var _this = this;\n        var cellHtmls = resources.map(function (resource) {\n            return _this.renderResourceCell(resource, 1);\n        });\n        return this.buildTr(cellHtmls);\n    };\n    ResourceDayHeader.prototype.renderDayAndResourceRows = function (dates, resources) {\n        var dateHtmls = [];\n        var resourceHtmls = [];\n        for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {\n            var date = dates_1[_i];\n            dateHtmls.push(this.renderDateCell(date, resources.length));\n            for (var _a = 0, resources_1 = resources; _a < resources_1.length; _a++) {\n                var resource = resources_1[_a];\n                resourceHtmls.push(this.renderResourceCell(resource, 1, date));\n            }\n        }\n        return this.buildTr(dateHtmls) +\n            this.buildTr(resourceHtmls);\n    };\n    ResourceDayHeader.prototype.renderResourceAndDayRows = function (resources, dates) {\n        var resourceHtmls = [];\n        var dateHtmls = [];\n        for (var _i = 0, resources_2 = resources; _i < resources_2.length; _i++) {\n            var resource = resources_2[_i];\n            resourceHtmls.push(this.renderResourceCell(resource, dates.length));\n            for (var _a = 0, dates_2 = dates; _a < dates_2.length; _a++) {\n                var date = dates_2[_a];\n                dateHtmls.push(this.renderDateCell(date, 1, resource));\n            }\n        }\n        return this.buildTr(resourceHtmls) +\n            this.buildTr(dateHtmls);\n    };\n    // Cell Rendering Utils\n    // ----------------------------------------------------------------------------------------------\n    // a cell with the resource name. might be associated with a specific day\n    ResourceDayHeader.prototype.renderResourceCell = function (resource, colspan, date) {\n        var dateEnv = this.dateEnv;\n        return '<th class=\"fc-resource-cell\"' +\n            ' data-resource-id=\"' + resource.id + '\"' +\n            (date ?\n                ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\n                '') +\n            (colspan > 1 ?\n                ' colspan=\"' + colspan + '\"' :\n                '') +\n            '>' +\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(this.resourceTextFunc(resource)) +\n            '</th>';\n    };\n    // a cell with date text. might have a resource associated with it\n    ResourceDayHeader.prototype.renderDateCell = function (date, colspan, resource) {\n        var props = this.props;\n        return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"renderDateCell\"])(date, props.dateProfile, props.datesRepDistinctDays, props.dates.length * props.resources.length, this.dateFormat, this.context, colspan, resource ? 'data-resource-id=\"' + resource.id + '\"' : '');\n    };\n    ResourceDayHeader.prototype.buildTr = function (cellHtmls) {\n        if (!cellHtmls.length) {\n            cellHtmls = ['<td>&nbsp;</td>'];\n        }\n        if (this.props.renderIntroHtml) {\n            cellHtmls = [this.props.renderIntroHtml()].concat(cellHtmls);\n        }\n        if (this.isRtl) {\n            cellHtmls.reverse();\n        }\n        return '<tr>' +\n            cellHtmls.join('') +\n            '</tr>';\n    };\n    // Post-rendering\n    // ----------------------------------------------------------------------------------------------\n    // given a container with already rendered resource cells\n    ResourceDayHeader.prototype.processResourceEls = function (resources) {\n        var _this = this;\n        var view = this.view;\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.thead, '.fc-resource-cell').forEach(function (node, col) {\n            col = col % resources.length;\n            if (_this.isRtl) {\n                col = resources.length - 1 - col;\n            }\n            var resource = resources[col];\n            view.publiclyTrigger('resourceRender', [\n                {\n                    resource: new ResourceApi(_this.calendar, resource),\n                    el: node,\n                    view: view\n                }\n            ]);\n        });\n    };\n    return ResourceDayHeader;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar AbstractResourceDayTable = /** @class */ (function () {\n    function AbstractResourceDayTable(dayTable, resources) {\n        this.dayTable = dayTable;\n        this.resources = resources;\n        this.resourceIndex = new ResourceIndex(resources);\n        this.rowCnt = dayTable.rowCnt;\n        this.colCnt = dayTable.colCnt * resources.length;\n        this.cells = this.buildCells();\n    }\n    AbstractResourceDayTable.prototype.buildCells = function () {\n        var _a = this, rowCnt = _a.rowCnt, dayTable = _a.dayTable, resources = _a.resources;\n        var rows = [];\n        for (var row = 0; row < rowCnt; row++) {\n            var rowCells = [];\n            for (var dateCol = 0; dateCol < dayTable.colCnt; dateCol++) {\n                for (var resourceCol = 0; resourceCol < resources.length; resourceCol++) {\n                    var resource = resources[resourceCol];\n                    var htmlAttrs = 'data-resource-id=\"' + resource.id + '\"';\n                    rowCells[this.computeCol(dateCol, resourceCol)] = {\n                        date: dayTable.cells[row][dateCol].date,\n                        resource: resource,\n                        htmlAttrs: htmlAttrs\n                    };\n                }\n            }\n            rows.push(rowCells);\n        }\n        return rows;\n    };\n    return AbstractResourceDayTable;\n}());\n/*\nresources over dates\n*/\nvar ResourceDayTable = /** @class */ (function (_super) {\n    __extends(ResourceDayTable, _super);\n    function ResourceDayTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourceDayTable.prototype.computeCol = function (dateI, resourceI) {\n        return resourceI * this.dayTable.colCnt + dateI;\n    };\n    /*\n    all date ranges are intact\n    */\n    ResourceDayTable.prototype.computeColRanges = function (dateStartI, dateEndI, resourceI) {\n        return [\n            {\n                firstCol: this.computeCol(dateStartI, resourceI),\n                lastCol: this.computeCol(dateEndI, resourceI),\n                isStart: true,\n                isEnd: true\n            }\n        ];\n    };\n    return ResourceDayTable;\n}(AbstractResourceDayTable));\n/*\ndates over resources\n*/\nvar DayResourceTable = /** @class */ (function (_super) {\n    __extends(DayResourceTable, _super);\n    function DayResourceTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayResourceTable.prototype.computeCol = function (dateI, resourceI) {\n        return dateI * this.resources.length + resourceI;\n    };\n    /*\n    every single day is broken up\n    */\n    DayResourceTable.prototype.computeColRanges = function (dateStartI, dateEndI, resourceI) {\n        var segs = [];\n        for (var i = dateStartI; i <= dateEndI; i++) {\n            var col = this.computeCol(i, resourceI);\n            segs.push({\n                firstCol: col,\n                lastCol: col,\n                isStart: i === dateStartI,\n                isEnd: i === dateEndI\n            });\n        }\n        return segs;\n    };\n    return DayResourceTable;\n}(AbstractResourceDayTable));\nvar ResourceIndex = /** @class */ (function () {\n    function ResourceIndex(resources) {\n        var indicesById = {};\n        var ids = [];\n        for (var i = 0; i < resources.length; i++) {\n            var id = resources[i].id;\n            ids.push(id);\n            indicesById[id] = i;\n        }\n        this.ids = ids;\n        this.indicesById = indicesById;\n        this.length = resources.length;\n    }\n    return ResourceIndex;\n}());\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nvar VResourceSplitter = /** @class */ (function (_super) {\n    __extends(VResourceSplitter, _super);\n    function VResourceSplitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VResourceSplitter.prototype.getKeyInfo = function (props) {\n        var resourceDayTable = props.resourceDayTable;\n        var hash = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"mapHash\"])(resourceDayTable.resourceIndex.indicesById, function (i) {\n            return resourceDayTable.resources[i]; // has `ui` AND `businessHours` keys!\n        }); // :(\n        hash[''] = {};\n        return hash;\n    };\n    VResourceSplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n        return [dateSpan.resourceId || ''];\n    };\n    VResourceSplitter.prototype.getKeysForEventDef = function (eventDef) {\n        var resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    };\n    return VResourceSplitter;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Splitter\"]));\n// joiner\nvar NO_SEGS = []; // for memoizing\nvar VResourceJoiner = /** @class */ (function () {\n    function VResourceJoiner() {\n        this.joinDateSelection = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinSegs);\n        this.joinBusinessHours = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinSegs);\n        this.joinFgEvents = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinSegs);\n        this.joinBgEvents = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinSegs);\n        this.joinEventDrags = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinInteractions);\n        this.joinEventResizes = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(this.joinInteractions);\n    }\n    /*\n    propSets also has a '' key for things with no resource\n    */\n    VResourceJoiner.prototype.joinProps = function (propSets, resourceDayTable) {\n        var dateSelectionSets = [];\n        var businessHoursSets = [];\n        var fgEventSets = [];\n        var bgEventSets = [];\n        var eventDrags = [];\n        var eventResizes = [];\n        var eventSelection = '';\n        var keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            var props = propSets[key];\n            dateSelectionSets.push(props.dateSelectionSegs);\n            businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n            fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n            bgEventSets.push(props.bgEventSegs);\n            eventDrags.push(props.eventDrag);\n            eventResizes.push(props.eventResize);\n            eventSelection = eventSelection || props.eventSelection;\n        }\n        return {\n            dateSelectionSegs: this.joinDateSelection.apply(this, [resourceDayTable].concat(dateSelectionSets)),\n            businessHourSegs: this.joinBusinessHours.apply(this, [resourceDayTable].concat(businessHoursSets)),\n            fgEventSegs: this.joinFgEvents.apply(this, [resourceDayTable].concat(fgEventSets)),\n            bgEventSegs: this.joinBgEvents.apply(this, [resourceDayTable].concat(bgEventSets)),\n            eventDrag: this.joinEventDrags.apply(this, [resourceDayTable].concat(eventDrags)),\n            eventResize: this.joinEventResizes.apply(this, [resourceDayTable].concat(eventResizes)),\n            eventSelection: eventSelection\n        };\n    };\n    VResourceJoiner.prototype.joinSegs = function (resourceDayTable) {\n        var segGroups = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            segGroups[_i - 1] = arguments[_i];\n        }\n        var resourceCnt = resourceDayTable.resources.length;\n        var transformedSegs = [];\n        for (var i = 0; i < resourceCnt; i++) {\n            for (var _a = 0, _b = segGroups[i]; _a < _b.length; _a++) {\n                var seg = _b[_a];\n                transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n            }\n            for (var _c = 0, _d = segGroups[resourceCnt]; _c < _d.length; _c++) { // one beyond. the all-resource\n                var seg = _d[_c];\n                transformedSegs.push.apply(// one beyond. the all-resource\n                transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    };\n    /*\n    for expanding non-resource segs to all resources.\n    only for public use.\n    no memoizing.\n    */\n    VResourceJoiner.prototype.expandSegs = function (resourceDayTable, segs) {\n        var resourceCnt = resourceDayTable.resources.length;\n        var transformedSegs = [];\n        for (var i = 0; i < resourceCnt; i++) {\n            for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n                var seg = segs_1[_i];\n                transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    };\n    VResourceJoiner.prototype.joinInteractions = function (resourceDayTable) {\n        var interactions = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            interactions[_i - 1] = arguments[_i];\n        }\n        var resourceCnt = resourceDayTable.resources.length;\n        var affectedInstances = {};\n        var transformedSegs = [];\n        var isEvent = false;\n        var sourceSeg = null;\n        for (var i = 0; i < resourceCnt; i++) {\n            var interaction = interactions[i];\n            if (interaction) {\n                for (var _a = 0, _b = interaction.segs; _a < _b.length; _a++) {\n                    var seg = _b[_a];\n                    transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i) // TODO: templateify Interaction::segs\n                    );\n                }\n                __assign(affectedInstances, interaction.affectedInstances);\n                isEvent = isEvent || interaction.isEvent;\n                sourceSeg = sourceSeg || interaction.sourceSeg;\n            }\n            if (interactions[resourceCnt]) { // one beyond. the all-resource\n                for (var _c = 0, _d = interactions[resourceCnt].segs; _c < _d.length; _c++) {\n                    var seg = _d[_c];\n                    transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i) // TODO: templateify Interaction::segs\n                    );\n                }\n            }\n        }\n        return {\n            affectedInstances: affectedInstances,\n            segs: transformedSegs,\n            isEvent: isEvent,\n            sourceSeg: sourceSeg\n        };\n    };\n    return VResourceJoiner;\n}());\n\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n    return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n        .map(function (node) {\n        return node.resource;\n    });\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n    var complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n    var flatNodes = [];\n    flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n    return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n    for (var i = 0; i < complexNodes.length; i++) {\n        var complexNode = complexNodes[i];\n        var group = complexNode.group;\n        if (group) {\n            if (isVGrouping) {\n                var firstRowIndex = res.length;\n                var rowSpanIndex = rowSpans.length;\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n                if (firstRowIndex < res.length) {\n                    var firstRow = res[firstRowIndex];\n                    var firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n                    firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n                }\n            }\n            else {\n                var id = group.spec.field + ':' + group.value;\n                var isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n                res.push({ id: id, group: group, isExpanded: isExpanded });\n                if (isExpanded) {\n                    flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n                }\n            }\n        }\n        else if (complexNode.resource) {\n            var id = complexNode.resource.id;\n            var isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n            res.push({\n                id: id,\n                rowSpans: rowSpans,\n                depth: depth,\n                isExpanded: isExpanded,\n                hasChildren: Boolean(complexNode.children.length),\n                resource: complexNode.resource,\n                resourceFields: complexNode.resourceFields\n            });\n            if (isExpanded) {\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n            }\n        }\n    }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n    var resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n    var builtNodes = [];\n    for (var resourceId in resourceNodes) {\n        var resourceNode = resourceNodes[resourceId];\n        if (!resourceNode.resource.parentId) {\n            insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n        }\n    }\n    return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n    var nodeHash = {};\n    for (var resourceId in resourceStore) {\n        var resource = resourceStore[resourceId];\n        nodeHash[resourceId] = {\n            resource: resource,\n            resourceFields: buildResourceFields(resource),\n            children: []\n        };\n    }\n    for (var resourceId in resourceStore) {\n        var resource = resourceStore[resourceId];\n        if (resource.parentId) {\n            var parentNode = nodeHash[resource.parentId];\n            if (parentNode) {\n                insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n            }\n        }\n    }\n    return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n    if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n        var groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n        insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n    }\n    else {\n        insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n    }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n    var groupValue = resourceNode.resourceFields[groupSpec.field];\n    var groupNode;\n    var newGroupIndex;\n    // find an existing group that matches, or determine the position for a new group\n    if (groupSpec.order) {\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n            var node = nodes[newGroupIndex];\n            if (node.group) {\n                var cmp = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"flexibleCompare\"])(groupValue, node.group.value) * groupSpec.order;\n                if (cmp === 0) {\n                    groupNode = node;\n                    break;\n                }\n                else if (cmp < 0) {\n                    break;\n                }\n            }\n        }\n    }\n    else { // the groups are unordered\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n            var node = nodes[newGroupIndex];\n            if (node.group && groupValue === node.group.value) {\n                groupNode = node;\n                break;\n            }\n        }\n    }\n    if (!groupNode) {\n        groupNode = {\n            group: {\n                value: groupValue,\n                spec: groupSpec\n            },\n            children: []\n        };\n        nodes.splice(newGroupIndex, 0, groupNode);\n    }\n    return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n    var i;\n    for (i = 0; i < siblings.length; i++) {\n        var cmp = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"compareByFieldSpecs\"])(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs);\n        if (cmp > 0) { // went 1 past. insert at i\n            break;\n        }\n    }\n    siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n    var obj = __assign({}, resource.extendedProps, resource.ui, resource);\n    delete obj.ui;\n    delete obj.extendedProps;\n    return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n    return group0.spec === group1.spec && group0.value === group1.value;\n}\n\nvar main = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createPlugin\"])({\n    reducers: [resourcesReducers],\n    eventDefParsers: [parseEventDef],\n    isDraggableTransformers: [transformIsDraggable],\n    eventDragMutationMassagers: [massageEventDragMutation],\n    eventDefMutationAppliers: [applyEventDefMutation],\n    dateSelectionTransformers: [transformDateSelectionJoin],\n    datePointTransforms: [transformDatePoint],\n    dateSpanTransforms: [transformDateSpan],\n    viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n    isPropsValid: isPropsValidWithResources,\n    externalDefTransforms: [transformExternalDef],\n    eventResizeJoinTransforms: [transformEventResizeJoin],\n    viewContainerModifiers: [injectLicenseWarning],\n    eventDropTransformers: [transformEventDrop],\n    optionChangeHandlers: optionChangeHandlers\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (main);\n\n\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/resource-common/main.esm.js?");

/***/ }),

/***/ "./node_modules/@fullcalendar/resource-timeline/main.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@fullcalendar/resource-timeline/main.esm.js ***!
  \******************************************************************/
/*! exports provided: default, ResourceTimelineView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResourceTimelineView\", function() { return ResourceTimelineView; });\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/core */ \"@fullcalendar/core\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/timeline */ \"./node_modules/@fullcalendar/timeline/main.esm.js\");\n/* harmony import */ var _fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fullcalendar/resource-common */ \"./node_modules/@fullcalendar/resource-common/main.esm.js\");\n/*!\nFullCalendar Resource Timeline Plugin v4.3.0\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2019 Adam Shaw\n*/\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar Row = /** @class */ (function (_super) {\n    __extends(Row, _super);\n    function Row(context, spreadsheetParent, spreadsheetNextSibling, timeAxisParent, timeAxisNextSibling) {\n        var _this = _super.call(this, context) || this;\n        _this.isSizeDirty = false;\n        spreadsheetParent.insertBefore(_this.spreadsheetTr = document.createElement('tr'), spreadsheetNextSibling);\n        timeAxisParent.insertBefore(_this.timeAxisTr = document.createElement('tr'), timeAxisNextSibling);\n        return _this;\n    }\n    Row.prototype.destroy = function () {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.spreadsheetTr);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.timeAxisTr);\n        _super.prototype.destroy.call(this);\n    };\n    Row.prototype.updateSize = function (isResize) {\n        this.isSizeDirty = false;\n    };\n    return Row;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nfunction updateExpanderIcon(el, isExpanded) {\n    var classList = el.classList;\n    if (isExpanded) {\n        classList.remove('fc-icon-plus-square');\n        classList.add('fc-icon-minus-square');\n    }\n    else {\n        classList.remove('fc-icon-minus-square');\n        classList.add('fc-icon-plus-square');\n    }\n}\nfunction clearExpanderIcon(el) {\n    var classList = el.classList;\n    classList.remove('fc-icon-minus-square');\n    classList.remove('fc-icon-plus-square');\n}\nfunction updateTrResourceId(tr, resourceId) {\n    tr.setAttribute('data-resource-id', resourceId);\n}\n\nvar GroupRow = /** @class */ (function (_super) {\n    __extends(GroupRow, _super);\n    function GroupRow() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._renderCells = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.renderCells, _this.unrenderCells);\n        _this._updateExpanderIcon = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.updateExpanderIcon, null, [_this._renderCells]);\n        _this.onExpanderClick = function (ev) {\n            var props = _this.props;\n            _this.calendar.dispatch({\n                type: 'SET_RESOURCE_ENTITY_EXPANDED',\n                id: props.id,\n                isExpanded: !props.isExpanded\n            });\n        };\n        return _this;\n    }\n    GroupRow.prototype.render = function (props) {\n        this._renderCells(props.group, props.spreadsheetColCnt);\n        this._updateExpanderIcon(props.isExpanded);\n        this.isSizeDirty = true;\n    };\n    GroupRow.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._renderCells.unrender(); // should unrender everything else\n    };\n    GroupRow.prototype.renderCells = function (group, spreadsheetColCnt) {\n        var spreadsheetContentEl = this.renderSpreadsheetContent(group);\n        this.spreadsheetTr.appendChild(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('td', {\n            className: 'fc-divider',\n            colSpan: spreadsheetColCnt // span across all columns\n        }, this.spreadsheetHeightEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', null, spreadsheetContentEl)) // needed by setTrInnerHeight\n        );\n        this.expanderIconEl = spreadsheetContentEl.querySelector('.fc-icon');\n        this.expanderIconEl.parentElement.addEventListener('click', this.onExpanderClick);\n        // insert a single cell, with a single empty <div>.\n        // there will be no content\n        this.timeAxisTr.appendChild(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('td', { className: 'fc-divider' }, this.timeAxisHeightEl = document.createElement('div')));\n    };\n    GroupRow.prototype.unrenderCells = function () {\n        this.spreadsheetTr.innerHTML = '';\n        this.timeAxisTr.innerHTML = '';\n    };\n    /*\n    Renders the content wrapper element that will be inserted into this row's TD cell.\n    */\n    GroupRow.prototype.renderSpreadsheetContent = function (group) {\n        var text = this.renderCellText(group);\n        var contentEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])('<div class=\"fc-cell-content\">' +\n            '<span class=\"fc-expander\">' +\n            '<span class=\"fc-icon\"></span>' +\n            '</span>' +\n            '<span class=\"fc-cell-text\">' +\n            (text ? Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(text) : '&nbsp;') +\n            '</span>' +\n            '</div>');\n        var filter = group.spec.render;\n        if (typeof filter === 'function') {\n            contentEl = filter(contentEl, group.value) || contentEl;\n        }\n        return contentEl;\n    };\n    GroupRow.prototype.renderCellText = function (group) {\n        var text = group.value || ''; // might be null/undefined if an ad-hoc grouping\n        var filter = group.spec.text;\n        if (typeof filter === 'function') {\n            text = filter(text) || text;\n        }\n        return text;\n    };\n    GroupRow.prototype.getHeightEls = function () {\n        return [this.spreadsheetHeightEl, this.timeAxisHeightEl];\n    };\n    GroupRow.prototype.updateExpanderIcon = function (isExpanded) {\n        updateExpanderIcon(this.expanderIconEl, isExpanded);\n    };\n    return GroupRow;\n}(Row));\nGroupRow.addEqualityFuncs({\n    group: _fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"isGroupsEqual\"] // HACK for ResourceTimelineView::renderRows\n});\n\nvar SpreadsheetRow = /** @class */ (function (_super) {\n    __extends(SpreadsheetRow, _super);\n    function SpreadsheetRow(context, tr) {\n        var _this = _super.call(this, context) || this;\n        _this._renderRow = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.renderRow, _this.unrenderRow);\n        _this._updateTrResourceId = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(updateTrResourceId, null, [_this._renderRow]);\n        _this._updateExpanderIcon = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.updateExpanderIcon, null, [_this._renderRow]);\n        _this.onExpanderClick = function (ev) {\n            var props = _this.props;\n            _this.calendar.dispatch({\n                type: 'SET_RESOURCE_ENTITY_EXPANDED',\n                id: props.id,\n                isExpanded: !props.isExpanded\n            });\n        };\n        _this.tr = tr;\n        return _this;\n    }\n    SpreadsheetRow.prototype.render = function (props) {\n        this._renderRow(props.resource, props.rowSpans, props.depth, props.colSpecs);\n        this._updateTrResourceId(this.tr, props.resource.id); // TODO: only use public ID?\n        this._updateExpanderIcon(props.hasChildren, props.isExpanded);\n    };\n    SpreadsheetRow.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._renderRow.unrender(); // should unrender everything else\n    };\n    SpreadsheetRow.prototype.renderRow = function (resource, rowSpans, depth, colSpecs) {\n        var _a = this, tr = _a.tr, theme = _a.theme, calendar = _a.calendar, view = _a.view;\n        var resourceFields = Object(_fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"buildResourceFields\"])(resource); // slightly inefficient. already done up the call stack\n        var mainTd;\n        for (var i = 0; i < colSpecs.length; i++) {\n            var colSpec = colSpecs[i];\n            var rowSpan = rowSpans[i];\n            if (rowSpan === 0) { // not responsible for group-based rows. VRowGroup is\n                continue;\n            }\n            else if (rowSpan == null) {\n                rowSpan = 1;\n            }\n            var text = void 0;\n            if (colSpec.field) {\n                text = resourceFields[colSpec.field];\n            }\n            else {\n                text = Object(_fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"buildResourceTextFunc\"])(colSpec.text, calendar)(resource);\n            }\n            var contentEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])('<div class=\"fc-cell-content\">' +\n                (colSpec.isMain ? renderIconHtml(depth) : '') +\n                '<span class=\"fc-cell-text\">' +\n                (text ? Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(text) : '&nbsp;') +\n                '</span>' +\n                '</div>');\n            if (typeof colSpec.render === 'function') { // a filter function for the element\n                contentEl = colSpec.render(new _fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"ResourceApi\"](calendar, resource), contentEl) || contentEl;\n            }\n            if (rowSpan > 1) {\n                contentEl.classList.add('fc-sticky');\n            }\n            var td = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('td', {\n                className: theme.getClass('widgetContent'),\n                rowspan: rowSpan\n            }, contentEl);\n            // the first cell of the row needs to have an inner div for setTrInnerHeight\n            if (colSpec.isMain) {\n                td.appendChild(this.heightEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', null, td.childNodes) // inner wrap\n                );\n                mainTd = td;\n            }\n            tr.appendChild(td);\n        }\n        this.expanderIconEl = tr.querySelector('.fc-expander-space .fc-icon');\n        // wait until very end\n        view.publiclyTrigger('resourceRender', [\n            {\n                resource: new _fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"ResourceApi\"](calendar, resource),\n                el: mainTd,\n                view: view\n            }\n        ]);\n    };\n    SpreadsheetRow.prototype.unrenderRow = function () {\n        this.tr.innerHTML = '';\n    };\n    SpreadsheetRow.prototype.updateExpanderIcon = function (hasChildren, isExpanded) {\n        var expanderIconEl = this.expanderIconEl;\n        var expanderEl = expanderIconEl.parentElement;\n        if (expanderIconEl &&\n            expanderEl // why would this be null?? was the case in IE11\n        ) {\n            if (hasChildren) {\n                expanderEl.addEventListener('click', this.onExpanderClick);\n                expanderEl.classList.add('fc-expander');\n                updateExpanderIcon(expanderIconEl, isExpanded);\n            }\n            else {\n                expanderEl.removeEventListener('click', this.onExpanderClick);\n                expanderEl.classList.remove('fc-expander');\n                clearExpanderIcon(expanderIconEl);\n            }\n        }\n    };\n    return SpreadsheetRow;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n/*\nRenders the HTML responsible for the subrow expander area,\nas well as the space before it (used to align expanders of similar depths)\n*/\nfunction renderIconHtml(depth) {\n    var html = '';\n    for (var i = 0; i < depth; i++) {\n        html += '<span class=\"fc-icon\"></span>';\n    }\n    html +=\n        '<span class=\"fc-expander-space\">' +\n            '<span class=\"fc-icon\"></span>' +\n            '</span>';\n    return html;\n}\n\nvar ResourceRow = /** @class */ (function (_super) {\n    __extends(ResourceRow, _super);\n    function ResourceRow(context, a, b, c, d, timeAxis) {\n        var _this = _super.call(this, context, a, b, c, d) || this;\n        _this._updateTrResourceId = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(updateTrResourceId);\n        _this.spreadsheetRow = new SpreadsheetRow(context, _this.spreadsheetTr);\n        _this.timeAxisTr.appendChild(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('td', { className: _this.theme.getClass('widgetContent') }, _this.innerContainerEl = document.createElement('div')));\n        _this.lane = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"TimelineLane\"](context, _this.innerContainerEl, _this.innerContainerEl, timeAxis);\n        return _this;\n    }\n    ResourceRow.prototype.destroy = function () {\n        this.spreadsheetRow.destroy();\n        this.lane.destroy();\n        _super.prototype.destroy.call(this);\n    };\n    ResourceRow.prototype.render = function (props) {\n        // spreadsheetRow handles calling updateTrResourceId for spreadsheetTr\n        this.spreadsheetRow.receiveProps({\n            colSpecs: props.colSpecs,\n            id: props.id,\n            rowSpans: props.rowSpans,\n            depth: props.depth,\n            isExpanded: props.isExpanded,\n            hasChildren: props.hasChildren,\n            resource: props.resource\n        });\n        this._updateTrResourceId(this.timeAxisTr, props.resource.id);\n        this.lane.receiveProps({\n            dateProfile: props.dateProfile,\n            nextDayThreshold: props.nextDayThreshold,\n            businessHours: props.businessHours,\n            eventStore: props.eventStore,\n            eventUiBases: props.eventUiBases,\n            dateSelection: props.dateSelection,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize\n        });\n        this.isSizeDirty = true;\n    };\n    ResourceRow.prototype.updateSize = function (isResize) {\n        _super.prototype.updateSize.call(this, isResize);\n        this.lane.updateSize(isResize);\n    };\n    ResourceRow.prototype.getHeightEls = function () {\n        return [this.spreadsheetRow.heightEl, this.innerContainerEl];\n    };\n    return ResourceRow;\n}(Row));\nResourceRow.addEqualityFuncs({\n    rowSpans: _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isArraysEqual\"] // HACK for isSizeDirty, ResourceTimelineView::renderRows\n});\n\nvar COL_MIN_WIDTH = 30;\nvar SpreadsheetHeader = /** @class */ (function (_super) {\n    __extends(SpreadsheetHeader, _super);\n    function SpreadsheetHeader(context, parentEl) {\n        var _this = _super.call(this, context) || this;\n        _this.resizables = [];\n        _this.colWidths = [];\n        _this.emitter = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"EmitterMixin\"]();\n        parentEl.appendChild(_this.tableEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('table', {\n            className: _this.theme.getClass('tableGrid')\n        }));\n        return _this;\n    }\n    SpreadsheetHeader.prototype.destroy = function () {\n        for (var _i = 0, _a = this.resizables; _i < _a.length; _i++) {\n            var resizable = _a[_i];\n            resizable.destroy();\n        }\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.tableEl);\n        _super.prototype.destroy.call(this);\n    };\n    SpreadsheetHeader.prototype.render = function (props) {\n        var theme = this.theme;\n        var colSpecs = props.colSpecs;\n        var html = '<colgroup>' + props.colTags + '</colgroup>' +\n            '<tbody>';\n        if (props.superHeaderText) {\n            html +=\n                '<tr class=\"fc-super\">' +\n                    '<th class=\"' + theme.getClass('widgetHeader') + '\" colspan=\"' + colSpecs.length + '\">' +\n                    '<div class=\"fc-cell-content\">' +\n                    '<span class=\"fc-cell-text\">' +\n                    Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(props.superHeaderText) +\n                    '</span>' +\n                    '</div>' +\n                    '</th>' +\n                    '</tr>';\n        }\n        html += '<tr>';\n        for (var i = 0; i < colSpecs.length; i++) {\n            var o = colSpecs[i];\n            var isLast = i === (colSpecs.length - 1);\n            html +=\n                \"<th class=\\\"\" + theme.getClass('widgetHeader') + \"\\\">\" +\n                    '<div>' +\n                    '<div class=\"fc-cell-content\">' +\n                    (o.isMain ?\n                        '<span class=\"fc-expander-space\">' +\n                            '<span class=\"fc-icon\"></span>' +\n                            '</span>' :\n                        '') +\n                    '<span class=\"fc-cell-text\">' +\n                    Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(o.labelText || '') + // what about normalizing this value ahead of time?\n                    '</span>' +\n                    '</div>' +\n                    (!isLast ? '<div class=\"fc-col-resizer\"></div>' : '') +\n                    '</div>' +\n                    '</th>';\n        }\n        html += '</tr>';\n        html += '</tbody>';\n        this.tableEl.innerHTML = html;\n        this.thEls = Array.prototype.slice.call(this.tableEl.querySelectorAll('th'));\n        this.colEls = Array.prototype.slice.call(this.tableEl.querySelectorAll('col'));\n        this.resizerEls = Array.prototype.slice.call(this.tableEl.querySelectorAll('.fc-col-resizer'));\n        this.initColResizing();\n    };\n    SpreadsheetHeader.prototype.initColResizing = function () {\n        var _this = this;\n        var ElementDraggingImpl = this.calendar.pluginSystem.hooks.elementDraggingImpl;\n        if (ElementDraggingImpl) {\n            this.resizables = this.resizerEls.map(function (handleEl, colIndex) {\n                var dragging = new ElementDraggingImpl(handleEl);\n                var startWidth;\n                dragging.emitter.on('dragstart', function () {\n                    startWidth = _this.colWidths[colIndex];\n                    if (typeof startWidth !== 'number') {\n                        startWidth = _this.thEls[colIndex].getBoundingClientRect().width;\n                    }\n                });\n                dragging.emitter.on('dragmove', function (pev) {\n                    _this.colWidths[colIndex] = Math.max(startWidth + pev.deltaX * (_this.isRtl ? -1 : 1), COL_MIN_WIDTH);\n                    _this.emitter.trigger('colwidthchange', _this.colWidths);\n                });\n                dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n                return dragging;\n            });\n        }\n    };\n    return SpreadsheetHeader;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar Spreadsheet = /** @class */ (function (_super) {\n    __extends(Spreadsheet, _super);\n    function Spreadsheet(context, headParentEl, bodyParentEl) {\n        var _this = _super.call(this, context) || this;\n        _this._renderCells = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.renderCells, _this.unrenderCells);\n        _this.layout = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"HeaderBodyLayout\"](headParentEl, bodyParentEl, 'clipped-scroll');\n        var headerEnhancedScroller = _this.layout.headerScroller.enhancedScroll;\n        var bodyEnhancedScroller = _this.layout.bodyScroller.enhancedScroll;\n        _this.header = new SpreadsheetHeader(context, headerEnhancedScroller.canvas.contentEl);\n        _this.header.emitter.on('colwidthchange', function (colWidths) {\n            _this.applyColWidths(colWidths);\n        });\n        bodyEnhancedScroller.canvas.contentEl\n            .appendChild(_this.bodyContainerEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', { className: 'fc-rows' }, '<table>' +\n            '<colgroup />' +\n            '<tbody />' +\n            '</table>'));\n        _this.bodyColGroup = _this.bodyContainerEl.querySelector('colgroup');\n        _this.bodyTbody = _this.bodyContainerEl.querySelector('tbody');\n        return _this;\n    }\n    Spreadsheet.prototype.destroy = function () {\n        this.header.destroy();\n        this.layout.destroy();\n        this._renderCells.unrender();\n        _super.prototype.destroy.call(this);\n    };\n    Spreadsheet.prototype.render = function (props) {\n        this._renderCells(props.superHeaderText, props.colSpecs);\n    };\n    Spreadsheet.prototype.renderCells = function (superHeaderText, colSpecs) {\n        var colTags = this.renderColTags(colSpecs);\n        this.header.receiveProps({\n            superHeaderText: superHeaderText,\n            colSpecs: colSpecs,\n            colTags: colTags\n        });\n        this.bodyColGroup.innerHTML = colTags;\n        this.bodyColEls = Array.prototype.slice.call(this.bodyColGroup.querySelectorAll('col'));\n        this.applyColWidths(colSpecs.map(function (colSpec) { return colSpec.width; }));\n    };\n    Spreadsheet.prototype.unrenderCells = function () {\n        this.bodyColGroup.innerHTML = '';\n    };\n    Spreadsheet.prototype.renderColTags = function (colSpecs) {\n        var html = '';\n        for (var _i = 0, colSpecs_1 = colSpecs; _i < colSpecs_1.length; _i++) {\n            var o = colSpecs_1[_i];\n            if (o.isMain) {\n                html += '<col class=\"fc-main-col\"/>';\n            }\n            else {\n                html += '<col/>';\n            }\n        }\n        return html;\n    };\n    Spreadsheet.prototype.updateSize = function (isResize, totalHeight, isAuto) {\n        this.layout.setHeight(totalHeight, isAuto);\n    };\n    Spreadsheet.prototype.applyColWidths = function (colWidths) {\n        var _this = this;\n        colWidths.forEach(function (colWidth, colIndex) {\n            var headEl = _this.header.colEls[colIndex]; // bad to access child\n            var bodyEl = _this.bodyColEls[colIndex];\n            var styleVal;\n            if (typeof colWidth === 'number') {\n                styleVal = colWidth + 'px';\n            }\n            else if (typeof colWidth == null) {\n                styleVal = '';\n            }\n            headEl.style.width = bodyEl.style.width = styleVal;\n        });\n    };\n    return Spreadsheet;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar MIN_RESOURCE_AREA_WIDTH = 30; // definitely bigger than scrollbars\nvar ResourceTimelineView = /** @class */ (function (_super) {\n    __extends(ResourceTimelineView, _super);\n    function ResourceTimelineView(context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n        _this.isStickyScrollDirty = false;\n        _this.rowNodes = [];\n        _this.rowComponents = [];\n        _this.rowComponentsById = {};\n        _this.resourceAreaWidthDraggings = [];\n        _this.splitter = new _fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"ResourceSplitter\"](); // doesn't let it do businessHours tho\n        _this.hasResourceBusinessHours = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(hasResourceBusinessHours);\n        _this.buildRowNodes = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(_fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"buildRowNodes\"]);\n        _this.hasNesting = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoize\"])(hasNesting);\n        _this._updateHasNesting = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this.updateHasNesting);\n        var allColSpecs = _this.opt('resourceColumns') || [];\n        var labelText = _this.opt('resourceLabelText'); // TODO: view.override\n        var defaultLabelText = 'Resources'; // TODO: view.defaults\n        var superHeaderText = null;\n        if (!allColSpecs.length) {\n            allColSpecs.push({\n                labelText: labelText || defaultLabelText,\n                text: Object(_fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"buildResourceTextFunc\"])(_this.opt('resourceText'), _this.calendar)\n            });\n        }\n        else {\n            superHeaderText = labelText;\n        }\n        var plainColSpecs = [];\n        var groupColSpecs = [];\n        var groupSpecs = [];\n        var isVGrouping = false;\n        var isHGrouping = false;\n        for (var _i = 0, allColSpecs_1 = allColSpecs; _i < allColSpecs_1.length; _i++) {\n            var colSpec = allColSpecs_1[_i];\n            if (colSpec.group) {\n                groupColSpecs.push(colSpec);\n            }\n            else {\n                plainColSpecs.push(colSpec);\n            }\n        }\n        plainColSpecs[0].isMain = true;\n        if (groupColSpecs.length) {\n            groupSpecs = groupColSpecs;\n            isVGrouping = true;\n        }\n        else {\n            var hGroupField = _this.opt('resourceGroupField');\n            if (hGroupField) {\n                isHGrouping = true;\n                groupSpecs.push({\n                    field: hGroupField,\n                    text: _this.opt('resourceGroupText'),\n                    render: _this.opt('resourceGroupRender')\n                });\n            }\n        }\n        var allOrderSpecs = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"parseFieldSpecs\"])(_this.opt('resourceOrder'));\n        var plainOrderSpecs = [];\n        for (var _a = 0, allOrderSpecs_1 = allOrderSpecs; _a < allOrderSpecs_1.length; _a++) {\n            var orderSpec = allOrderSpecs_1[_a];\n            var isGroup = false;\n            for (var _b = 0, groupSpecs_1 = groupSpecs; _b < groupSpecs_1.length; _b++) {\n                var groupSpec = groupSpecs_1[_b];\n                if (groupSpec.field === orderSpec.field) {\n                    groupSpec.order = orderSpec.order; // -1, 0, 1\n                    isGroup = true;\n                    break;\n                }\n            }\n            if (!isGroup) {\n                plainOrderSpecs.push(orderSpec);\n            }\n        }\n        _this.superHeaderText = superHeaderText;\n        _this.isVGrouping = isVGrouping;\n        _this.isHGrouping = isHGrouping;\n        _this.groupSpecs = groupSpecs;\n        _this.colSpecs = groupColSpecs.concat(plainColSpecs);\n        _this.orderSpecs = plainOrderSpecs;\n        // START RENDERING...\n        _this.el.classList.add('fc-timeline');\n        if (_this.opt('eventOverlap') === false) {\n            _this.el.classList.add('fc-no-overlap');\n        }\n        _this.el.innerHTML = _this.renderSkeletonHtml();\n        _this.resourceAreaHeadEl = _this.el.querySelector('thead .fc-resource-area');\n        _this.setResourceAreaWidth(_this.opt('resourceAreaWidth'));\n        _this.initResourceAreaWidthDragging();\n        _this.miscHeight = _this.el.getBoundingClientRect().height;\n        _this.spreadsheet = new Spreadsheet(_this.context, _this.resourceAreaHeadEl, _this.el.querySelector('tbody .fc-resource-area'));\n        _this.timeAxis = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"TimeAxis\"](_this.context, _this.el.querySelector('thead .fc-time-area'), _this.el.querySelector('tbody .fc-time-area'));\n        var timeAxisRowContainer = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', { className: 'fc-rows' }, '<table><tbody /></table>');\n        _this.timeAxis.layout.bodyScroller.enhancedScroll.canvas.contentEl.appendChild(timeAxisRowContainer);\n        _this.timeAxisTbody = timeAxisRowContainer.querySelector('tbody');\n        _this.lane = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"TimelineLane\"](_this.context, null, _this.timeAxis.layout.bodyScroller.enhancedScroll.canvas.bgEl, _this.timeAxis);\n        _this.bodyScrollJoiner = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"ScrollJoiner\"]('vertical', [\n            _this.spreadsheet.layout.bodyScroller,\n            _this.timeAxis.layout.bodyScroller\n        ]);\n        // after scrolljoiner\n        _this.spreadsheetBodyStickyScroller = new _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"StickyScroller\"](_this.spreadsheet.layout.bodyScroller.enhancedScroll, _this.isRtl, true // isVertical\n        );\n        _this.spreadsheet.receiveProps({\n            superHeaderText: _this.superHeaderText,\n            colSpecs: _this.colSpecs\n        });\n        // Component...\n        context.calendar.registerInteractiveComponent(_this, {\n            el: _this.timeAxis.slats.el\n        });\n        return _this;\n    }\n    ResourceTimelineView.prototype.renderSkeletonHtml = function () {\n        var theme = this.theme;\n        return \"<table class=\\\"\" + theme.getClass('tableGrid') + \"\\\"> <thead class=\\\"fc-head\\\"> <tr> <td class=\\\"fc-resource-area \" + theme.getClass('widgetHeader') + \"\\\"></td> <td class=\\\"fc-divider fc-col-resizer \" + theme.getClass('widgetHeader') + \"\\\"></td> <td class=\\\"fc-time-area \" + theme.getClass('widgetHeader') + \"\\\"></td> </tr> </thead> <tbody class=\\\"fc-body\\\"> <tr> <td class=\\\"fc-resource-area \" + theme.getClass('widgetContent') + \"\\\"></td> <td class=\\\"fc-divider fc-col-resizer \" + theme.getClass('widgetHeader') + \"\\\"></td> <td class=\\\"fc-time-area \" + theme.getClass('widgetContent') + \"\\\"></td> </tr> </tbody> </table>\";\n    };\n    ResourceTimelineView.prototype.render = function (props) {\n        _super.prototype.render.call(this, props);\n        var splitProps = this.splitter.splitProps(props);\n        var hasResourceBusinessHours = this.hasResourceBusinessHours(props.resourceStore);\n        this.timeAxis.receiveProps({\n            dateProfile: props.dateProfile\n        });\n        // for all-resource bg events / selections / business-hours\n        this.lane.receiveProps(__assign({}, splitProps[''], { dateProfile: props.dateProfile, nextDayThreshold: this.nextDayThreshold, businessHours: hasResourceBusinessHours ? null : props.businessHours }));\n        var newRowNodes = this.buildRowNodes(props.resourceStore, this.groupSpecs, this.orderSpecs, this.isVGrouping, props.resourceEntityExpansions, this.opt('resourcesInitiallyExpanded'));\n        this._updateHasNesting(this.hasNesting(newRowNodes));\n        this.diffRows(newRowNodes);\n        this.renderRows(props.dateProfile, hasResourceBusinessHours ? props.businessHours : null, // CONFUSING, comment\n        splitProps);\n    };\n    ResourceTimelineView.prototype.updateHasNesting = function (isNesting) {\n        var classList = this.el.classList;\n        if (isNesting) {\n            classList.remove('fc-flat');\n        }\n        else {\n            classList.add('fc-flat');\n        }\n    };\n    ResourceTimelineView.prototype.diffRows = function (newNodes) {\n        var oldNodes = this.rowNodes;\n        var oldLen = oldNodes.length;\n        var oldIndexHash = {}; // id -> index\n        var oldI = 0;\n        var newI = 0;\n        for (oldI = 0; oldI < oldLen; oldI++) {\n            oldIndexHash[oldNodes[oldI].id] = oldI;\n        }\n        // iterate new nodes\n        for (oldI = 0, newI = 0; newI < newNodes.length; newI++) {\n            var newNode = newNodes[newI];\n            var oldIFound = oldIndexHash[newNode.id];\n            if (oldIFound != null && oldIFound >= oldI) {\n                this.removeRows(newI, oldIFound - oldI, oldNodes); // won't do anything if same index\n                oldI = oldIFound + 1;\n            }\n            else {\n                this.addRow(newI, newNode);\n            }\n        }\n        // old rows that weren't found need to be removed\n        this.removeRows(newI, oldLen - oldI, oldNodes); // won't do anything if same index\n        this.rowNodes = newNodes;\n    };\n    /*\n    rowComponents is the in-progress result\n    */\n    ResourceTimelineView.prototype.addRow = function (index, rowNode) {\n        var _a = this, rowComponents = _a.rowComponents, rowComponentsById = _a.rowComponentsById;\n        var nextComponent = rowComponents[index];\n        var newComponent = this.buildChildComponent(rowNode, this.spreadsheet.bodyTbody, nextComponent ? nextComponent.spreadsheetTr : null, this.timeAxisTbody, nextComponent ? nextComponent.timeAxisTr : null);\n        rowComponents.splice(index, 0, newComponent);\n        rowComponentsById[rowNode.id] = newComponent;\n    };\n    ResourceTimelineView.prototype.removeRows = function (startIndex, len, oldRowNodes) {\n        if (len) {\n            var _a = this, rowComponents = _a.rowComponents, rowComponentsById = _a.rowComponentsById;\n            for (var i = 0; i < len; i++) {\n                var rowComponent = rowComponents[startIndex + i];\n                rowComponent.destroy();\n                delete rowComponentsById[oldRowNodes[i].id];\n            }\n            rowComponents.splice(startIndex, len);\n        }\n    };\n    ResourceTimelineView.prototype.buildChildComponent = function (node, spreadsheetTbody, spreadsheetNext, timeAxisTbody, timeAxisNext) {\n        if (node.group) {\n            return new GroupRow(this.context, spreadsheetTbody, spreadsheetNext, timeAxisTbody, timeAxisNext);\n        }\n        else if (node.resource) {\n            return new ResourceRow(this.context, spreadsheetTbody, spreadsheetNext, timeAxisTbody, timeAxisNext, this.timeAxis);\n        }\n    };\n    ResourceTimelineView.prototype.renderRows = function (dateProfile, fallbackBusinessHours, splitProps) {\n        var _a = this, rowNodes = _a.rowNodes, rowComponents = _a.rowComponents;\n        for (var i = 0; i < rowNodes.length; i++) {\n            var rowNode = rowNodes[i];\n            var rowComponent = rowComponents[i];\n            if (rowNode.group) {\n                rowComponent.receiveProps({\n                    spreadsheetColCnt: this.colSpecs.length,\n                    id: rowNode.id,\n                    isExpanded: rowNode.isExpanded,\n                    group: rowNode.group\n                });\n            }\n            else {\n                var resource = rowNode.resource;\n                rowComponent.receiveProps(__assign({}, splitProps[resource.id], { dateProfile: dateProfile, nextDayThreshold: this.nextDayThreshold, businessHours: resource.businessHours || fallbackBusinessHours, colSpecs: this.colSpecs, id: rowNode.id, rowSpans: rowNode.rowSpans, depth: rowNode.depth, isExpanded: rowNode.isExpanded, hasChildren: rowNode.hasChildren, resource: rowNode.resource }));\n            }\n        }\n    };\n    ResourceTimelineView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n        // FYI: this ordering is really important\n        var calendar = this.calendar;\n        var isBaseSizing = isResize || calendar.isViewUpdated || calendar.isDatesUpdated || calendar.isEventsUpdated;\n        if (isBaseSizing) {\n            this.syncHeadHeights();\n            this.timeAxis.updateSize(isResize, viewHeight - this.miscHeight, isAuto);\n            this.spreadsheet.updateSize(isResize, viewHeight - this.miscHeight, isAuto);\n        }\n        var rowSizingCnt = this.updateRowSizes(isResize);\n        this.lane.updateSize(isResize); // is efficient. uses flags\n        if (isBaseSizing || rowSizingCnt) {\n            this.bodyScrollJoiner.update();\n            this.timeAxis.layout.scrollJoiner.update(); // hack\n            this.rowPositions = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"PositionCache\"](this.timeAxis.slats.el, this.rowComponents.map(function (rowComponent) {\n                return rowComponent.timeAxisTr;\n            }), false, // isHorizontal\n            true // isVertical\n            );\n            this.rowPositions.build();\n            this.isStickyScrollDirty = true;\n        }\n    };\n    ResourceTimelineView.prototype.syncHeadHeights = function () {\n        var spreadsheetHeadEl = this.spreadsheet.header.tableEl;\n        var timeAxisHeadEl = this.timeAxis.header.tableEl;\n        spreadsheetHeadEl.style.height = '';\n        timeAxisHeadEl.style.height = '';\n        var max = Math.max(spreadsheetHeadEl.getBoundingClientRect().height, timeAxisHeadEl.getBoundingClientRect().height);\n        spreadsheetHeadEl.style.height =\n            timeAxisHeadEl.style.height = max + 'px';\n    };\n    ResourceTimelineView.prototype.updateRowSizes = function (isResize) {\n        var dirtyRowComponents = this.rowComponents;\n        if (!isResize) {\n            dirtyRowComponents = dirtyRowComponents.filter(function (rowComponent) {\n                return rowComponent.isSizeDirty;\n            });\n        }\n        var elArrays = dirtyRowComponents.map(function (rowComponent) {\n            return rowComponent.getHeightEls();\n        });\n        // reset to natural heights\n        for (var _i = 0, elArrays_1 = elArrays; _i < elArrays_1.length; _i++) {\n            var elArray = elArrays_1[_i];\n            for (var _a = 0, elArray_1 = elArray; _a < elArray_1.length; _a++) {\n                var el = elArray_1[_a];\n                el.style.height = '';\n            }\n        }\n        // let rows update their contents' heights\n        for (var _b = 0, dirtyRowComponents_1 = dirtyRowComponents; _b < dirtyRowComponents_1.length; _b++) {\n            var rowComponent = dirtyRowComponents_1[_b];\n            rowComponent.updateSize(isResize); // will reset isSizeDirty\n        }\n        var maxHeights = elArrays.map(function (elArray) {\n            var maxHeight = null;\n            for (var _i = 0, elArray_2 = elArray; _i < elArray_2.length; _i++) {\n                var el = elArray_2[_i];\n                var height = el.getBoundingClientRect().height;\n                if (maxHeight === null || height > maxHeight) {\n                    maxHeight = height;\n                }\n            }\n            return maxHeight;\n        });\n        for (var i = 0; i < elArrays.length; i++) {\n            for (var _c = 0, _d = elArrays[i]; _c < _d.length; _c++) {\n                var el = _d[_c];\n                el.style.height = maxHeights[i] + 'px';\n            }\n        }\n        return dirtyRowComponents.length;\n    };\n    ResourceTimelineView.prototype.destroy = function () {\n        for (var _i = 0, _a = this.rowComponents; _i < _a.length; _i++) {\n            var rowComponent = _a[_i];\n            rowComponent.destroy();\n        }\n        this.rowNodes = [];\n        this.rowComponents = [];\n        this.spreadsheet.destroy();\n        this.timeAxis.destroy();\n        for (var _b = 0, _c = this.resourceAreaWidthDraggings; _b < _c.length; _b++) {\n            var resourceAreaWidthDragging = _c[_b];\n            resourceAreaWidthDragging.destroy();\n        }\n        this.spreadsheetBodyStickyScroller.destroy();\n        _super.prototype.destroy.call(this);\n        this.calendar.unregisterInteractiveComponent(this);\n    };\n    // Now Indicator\n    // ------------------------------------------------------------------------------------------\n    ResourceTimelineView.prototype.getNowIndicatorUnit = function (dateProfile) {\n        return this.timeAxis.getNowIndicatorUnit(dateProfile);\n    };\n    ResourceTimelineView.prototype.renderNowIndicator = function (date) {\n        this.timeAxis.renderNowIndicator(date);\n    };\n    ResourceTimelineView.prototype.unrenderNowIndicator = function () {\n        this.timeAxis.unrenderNowIndicator();\n    };\n    // Scrolling\n    // ------------------------------------------------------------------------------------------------------------------\n    // this is useful for scrolling prev/next dates while resource is scrolled down\n    ResourceTimelineView.prototype.queryScroll = function () {\n        var scroll = _super.prototype.queryScroll.call(this);\n        if (this.props.resourceStore) {\n            __assign(scroll, this.queryResourceScroll());\n        }\n        return scroll;\n    };\n    ResourceTimelineView.prototype.applyScroll = function (scroll, isResize) {\n        _super.prototype.applyScroll.call(this, scroll, isResize);\n        if (this.props.resourceStore) {\n            this.applyResourceScroll(scroll);\n        }\n        // avoid updating stickyscroll too often\n        if (isResize || this.isStickyScrollDirty) {\n            this.isStickyScrollDirty = false;\n            this.spreadsheetBodyStickyScroller.updateSize();\n            this.timeAxis.updateStickyScrollers();\n        }\n    };\n    ResourceTimelineView.prototype.computeDateScroll = function (duration) {\n        return this.timeAxis.computeDateScroll(duration);\n    };\n    ResourceTimelineView.prototype.queryDateScroll = function () {\n        return this.timeAxis.queryDateScroll();\n    };\n    ResourceTimelineView.prototype.applyDateScroll = function (scroll) {\n        this.timeAxis.applyDateScroll(scroll);\n    };\n    ResourceTimelineView.prototype.queryResourceScroll = function () {\n        var _a = this, rowComponents = _a.rowComponents, rowNodes = _a.rowNodes;\n        var scroll = {};\n        var scrollerTop = this.timeAxis.layout.bodyScroller.el.getBoundingClientRect().top; // fixed position\n        for (var i = 0; i < rowComponents.length; i++) {\n            var rowComponent = rowComponents[i];\n            var rowNode = rowNodes[i];\n            var el = rowComponent.timeAxisTr;\n            var elBottom = el.getBoundingClientRect().bottom; // fixed position\n            if (elBottom > scrollerTop) {\n                scroll.rowId = rowNode.id;\n                scroll.bottom = elBottom - scrollerTop;\n                break;\n            }\n        }\n        // TODO: what about left scroll state for spreadsheet area?\n        return scroll;\n    };\n    ResourceTimelineView.prototype.applyResourceScroll = function (scroll) {\n        var rowId = scroll.forcedRowId || scroll.rowId;\n        if (rowId) {\n            var rowComponent = this.rowComponentsById[rowId];\n            if (rowComponent) {\n                var el = rowComponent.timeAxisTr;\n                if (el) {\n                    var innerTop = this.timeAxis.layout.bodyScroller.enhancedScroll.canvas.el.getBoundingClientRect().top;\n                    var rowRect = el.getBoundingClientRect();\n                    var scrollTop = (scroll.forcedRowId ?\n                        rowRect.top : // just use top edge\n                        rowRect.bottom - scroll.bottom) - // pixels from bottom edge\n                        innerTop;\n                    this.timeAxis.layout.bodyScroller.enhancedScroll.setScrollTop(scrollTop);\n                    this.spreadsheet.layout.bodyScroller.enhancedScroll.setScrollTop(scrollTop);\n                }\n            }\n        }\n    };\n    // TODO: scrollToResource\n    // Hit System\n    // ------------------------------------------------------------------------------------------\n    ResourceTimelineView.prototype.buildPositionCaches = function () {\n        this.timeAxis.slats.updateSize();\n        this.rowPositions.build();\n    };\n    ResourceTimelineView.prototype.queryHit = function (positionLeft, positionTop) {\n        var rowPositions = this.rowPositions;\n        var slats = this.timeAxis.slats;\n        var rowIndex = rowPositions.topToIndex(positionTop);\n        if (rowIndex != null) {\n            var resource = this.rowNodes[rowIndex].resource;\n            if (resource) { // not a group\n                var slatHit = slats.positionToHit(positionLeft);\n                if (slatHit) {\n                    return {\n                        component: this,\n                        dateSpan: {\n                            range: slatHit.dateSpan.range,\n                            allDay: slatHit.dateSpan.allDay,\n                            resourceId: resource.id\n                        },\n                        rect: {\n                            left: slatHit.left,\n                            right: slatHit.right,\n                            top: rowPositions.tops[rowIndex],\n                            bottom: rowPositions.bottoms[rowIndex]\n                        },\n                        dayEl: slatHit.dayEl,\n                        layer: 0\n                    };\n                }\n            }\n        }\n    };\n    // Resource Area\n    // ------------------------------------------------------------------------------------------------------------------\n    ResourceTimelineView.prototype.setResourceAreaWidth = function (widthVal) {\n        this.resourceAreaWidth = widthVal;\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyleProp\"])(this.resourceAreaHeadEl, 'width', widthVal || '');\n    };\n    ResourceTimelineView.prototype.initResourceAreaWidthDragging = function () {\n        var _this = this;\n        var resourceAreaDividerEls = Array.prototype.slice.call(this.el.querySelectorAll('.fc-col-resizer'));\n        var ElementDraggingImpl = this.calendar.pluginSystem.hooks.elementDraggingImpl;\n        if (ElementDraggingImpl) {\n            this.resourceAreaWidthDraggings = resourceAreaDividerEls.map(function (el) {\n                var dragging = new ElementDraggingImpl(el);\n                var dragStartWidth;\n                var viewWidth;\n                dragging.emitter.on('dragstart', function () {\n                    dragStartWidth = _this.resourceAreaWidth;\n                    if (typeof dragStartWidth !== 'number') {\n                        dragStartWidth = _this.resourceAreaHeadEl.getBoundingClientRect().width;\n                    }\n                    viewWidth = _this.el.getBoundingClientRect().width;\n                });\n                dragging.emitter.on('dragmove', function (pev) {\n                    var newWidth = dragStartWidth + pev.deltaX * (_this.isRtl ? -1 : 1);\n                    newWidth = Math.max(newWidth, MIN_RESOURCE_AREA_WIDTH);\n                    newWidth = Math.min(newWidth, viewWidth - MIN_RESOURCE_AREA_WIDTH);\n                    _this.setResourceAreaWidth(newWidth);\n                });\n                dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n                return dragging;\n            });\n        }\n    };\n    ResourceTimelineView.needsResourceData = true; // for ResourceViewProps\n    return ResourceTimelineView;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"View\"]));\nfunction hasResourceBusinessHours(resourceStore) {\n    for (var resourceId in resourceStore) {\n        var resource = resourceStore[resourceId];\n        if (resource.businessHours) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasNesting(nodes) {\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n        var node = nodes_1[_i];\n        if (node.group) {\n            return true;\n        }\n        else if (node.resource) {\n            if (node.hasChildren) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nvar main = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createPlugin\"])({\n    deps: [_fullcalendar_resource_common__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _fullcalendar_timeline__WEBPACK_IMPORTED_MODULE_1__[\"default\"]],\n    defaultView: 'resourceTimelineDay',\n    views: {\n        resourceTimeline: {\n            class: ResourceTimelineView,\n            resourceAreaWidth: '30%',\n            resourcesInitiallyExpanded: true,\n            eventResizableFromStart: true // TODO: not DRY with this same setting in the main timeline config\n        },\n        resourceTimelineDay: {\n            type: 'resourceTimeline',\n            duration: { days: 1 }\n        },\n        resourceTimelineWeek: {\n            type: 'resourceTimeline',\n            duration: { weeks: 1 }\n        },\n        resourceTimelineMonth: {\n            type: 'resourceTimeline',\n            duration: { months: 1 }\n        },\n        resourceTimelineYear: {\n            type: 'resourceTimeline',\n            duration: { years: 1 }\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (main);\n\n\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/resource-timeline/main.esm.js?");

/***/ }),

/***/ "./node_modules/@fullcalendar/timeline/main.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@fullcalendar/timeline/main.esm.js ***!
  \*********************************************************/
/*! exports provided: default, HeaderBodyLayout, ScrollJoiner, StickyScroller, TimeAxis, TimelineLane, TimelineView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HeaderBodyLayout\", function() { return HeaderBodyLayout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollJoiner\", function() { return ScrollJoiner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StickyScroller\", function() { return StickyScroller; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeAxis\", function() { return TimeAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimelineLane\", function() { return TimelineLane; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimelineView\", function() { return TimelineView; });\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/core */ \"@fullcalendar/core\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__);\n/*!\nFullCalendar Timeline Plugin v4.3.0\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2019 Adam Shaw\n*/\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/*\nA rectangular area of content that lives within a Scroller.\nCan have \"gutters\", areas of dead spacing around the perimeter.\nAlso very useful for forcing a width, which a Scroller cannot do alone.\nHas a content area that lives above a background area.\n*/\nvar ScrollerCanvas = /** @class */ (function () {\n    function ScrollerCanvas() {\n        this.gutters = {};\n        this.el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])(\"<div class=\\\"fc-scroller-canvas\\\"> <div class=\\\"fc-content\\\"></div> <div class=\\\"fc-bg\\\"></div> </div>\");\n        this.contentEl = this.el.querySelector('.fc-content');\n        this.bgEl = this.el.querySelector('.fc-bg');\n    }\n    /*\n    If falsy, resets all the gutters to 0\n    */\n    ScrollerCanvas.prototype.setGutters = function (gutters) {\n        if (!gutters) {\n            this.gutters = {};\n        }\n        else {\n            __assign(this.gutters, gutters);\n        }\n        this.updateSize();\n    };\n    ScrollerCanvas.prototype.setWidth = function (width) {\n        this.width = width;\n        this.updateSize();\n    };\n    ScrollerCanvas.prototype.setMinWidth = function (minWidth) {\n        this.minWidth = minWidth;\n        this.updateSize();\n    };\n    ScrollerCanvas.prototype.clearWidth = function () {\n        this.width = null;\n        this.minWidth = null;\n        this.updateSize();\n    };\n    ScrollerCanvas.prototype.updateSize = function () {\n        var _a = this, gutters = _a.gutters, el = _a.el;\n        // is border-box (width includes padding)\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"forceClassName\"])(el, 'fc-gutter-left', gutters.left);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"forceClassName\"])(el, 'fc-gutter-right', gutters.right);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"forceClassName\"])(el, 'fc-gutter-top', gutters.top);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"forceClassName\"])(el, 'fc-gutter-bottom', gutters.bottom);\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(el, {\n            paddingLeft: gutters.left || '',\n            paddingRight: gutters.right || '',\n            paddingTop: gutters.top || '',\n            paddingBottom: gutters.bottom || '',\n            width: (this.width != null) ?\n                this.width + (gutters.left || 0) + (gutters.right || 0) :\n                '',\n            minWidth: (this.minWidth != null) ?\n                this.minWidth + (gutters.left || 0) + (gutters.right || 0) :\n                ''\n        });\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(this.bgEl, {\n            left: gutters.left || '',\n            right: gutters.right || '',\n            top: gutters.top || '',\n            bottom: gutters.bottom || ''\n        });\n    };\n    return ScrollerCanvas;\n}());\n\nvar EnhancedScroller = /** @class */ (function (_super) {\n    __extends(EnhancedScroller, _super);\n    function EnhancedScroller(overflowX, overflowY) {\n        var _this = _super.call(this, overflowX, overflowY) || this;\n        // Scroll Events\n        // ----------------------------------------------------------------------------------------------\n        _this.reportScroll = function () {\n            if (!_this.isScrolling) {\n                _this.reportScrollStart();\n            }\n            _this.trigger('scroll');\n            _this.isMoving = true;\n            _this.requestMovingEnd();\n        };\n        _this.reportScrollStart = function () {\n            if (!_this.isScrolling) {\n                _this.isScrolling = true;\n                _this.trigger('scrollStart', _this.isTouching); // created in constructor\n            }\n        };\n        // Touch Events\n        // ----------------------------------------------------------------------------------------------\n        // will fire *before* the scroll event is fired\n        _this.reportTouchStart = function () {\n            _this.isTouching = true;\n        };\n        _this.reportTouchEnd = function () {\n            if (_this.isTouching) {\n                _this.isTouching = false;\n                // if touch scrolling was re-enabled during a recent touch scroll\n                // then unbind the handlers that are preventing it from happening.\n                if (_this.isTouchScrollEnabled) {\n                    _this.unbindPreventTouchScroll(); // won't do anything if not bound\n                }\n                // if the user ended their touch, and the scroll area wasn't moving,\n                // we consider this to be the end of the scroll.\n                if (!_this.isMoving) {\n                    _this.reportScrollEnd(); // won't fire if already ended\n                }\n            }\n        };\n        _this.isScrolling = false;\n        _this.isTouching = false;\n        _this.isMoving = false;\n        _this.isTouchScrollEnabled = true;\n        _this.requestMovingEnd = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"debounce\"])(_this.reportMovingEnd, 500);\n        _this.canvas = new ScrollerCanvas();\n        _this.el.appendChild(_this.canvas.el);\n        _this.applyOverflow();\n        _this.bindHandlers();\n        return _this;\n    }\n    EnhancedScroller.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unbindHandlers();\n    };\n    // Touch scroll prevention\n    // ----------------------------------------------------------------------------------------------\n    EnhancedScroller.prototype.disableTouchScroll = function () {\n        this.isTouchScrollEnabled = false;\n        this.bindPreventTouchScroll(); // will be unbound in enableTouchScroll or reportTouchEnd\n    };\n    EnhancedScroller.prototype.enableTouchScroll = function () {\n        this.isTouchScrollEnabled = true;\n        // only immediately unbind if a touch event is NOT in progress.\n        // otherwise, it will be handled by reportTouchEnd.\n        if (!this.isTouching) {\n            this.unbindPreventTouchScroll();\n        }\n    };\n    EnhancedScroller.prototype.bindPreventTouchScroll = function () {\n        if (!this.preventTouchScrollHandler) {\n            this.el.addEventListener('touchmove', (this.preventTouchScrollHandler = _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"preventDefault\"]));\n        }\n    };\n    EnhancedScroller.prototype.unbindPreventTouchScroll = function () {\n        if (this.preventTouchScrollHandler) {\n            this.el.removeEventListener('touchmove', this.preventTouchScrollHandler);\n            this.preventTouchScrollHandler = null;\n        }\n    };\n    // Handlers\n    // ----------------------------------------------------------------------------------------------\n    EnhancedScroller.prototype.bindHandlers = function () {\n        this.el.addEventListener('scroll', this.reportScroll);\n        this.el.addEventListener('touchstart', this.reportTouchStart, { passive: true });\n        this.el.addEventListener('touchend', this.reportTouchEnd);\n    };\n    EnhancedScroller.prototype.unbindHandlers = function () {\n        this.el.removeEventListener('scroll', this.reportScroll);\n        this.el.removeEventListener('touchstart', this.reportTouchStart, { passive: true });\n        this.el.removeEventListener('touchend', this.reportTouchEnd);\n    };\n    EnhancedScroller.prototype.reportMovingEnd = function () {\n        this.isMoving = false;\n        // only end the scroll if not currently touching.\n        // if touching, the scrolling will end later, on touchend.\n        if (!this.isTouching) {\n            this.reportScrollEnd();\n        }\n    };\n    EnhancedScroller.prototype.reportScrollEnd = function () {\n        if (this.isScrolling) {\n            this.trigger('scrollEnd');\n            this.isScrolling = false;\n        }\n    };\n    // Horizontal Scroll Normalization\n    // ----------------------------------------------------------------------------------------------\n    // http://stackoverflow.com/questions/24276619/better-way-to-get-the-viewport-of-a-scrollable-div-in-rtl-mode/24394376#24394376\n    // TODO: move all this to util functions\n    /*\n    If RTL, and scrolled to the left, returns NEGATIVE value (like Firefox)\n    */\n    EnhancedScroller.prototype.getScrollLeft = function () {\n        var el = this.el;\n        var direction = window.getComputedStyle(el).direction;\n        var val = el.scrollLeft;\n        if (direction === 'rtl') {\n            switch (getRtlScrollSystem()) {\n                case 'positive':\n                    val = (val + el.clientWidth) - el.scrollWidth;\n                    break;\n                case 'reverse':\n                    val = -val;\n                    break;\n            }\n        }\n        return val;\n    };\n    /*\n    Accepts a NEGATIVE value for when scrolled in RTL\n    */\n    EnhancedScroller.prototype.setScrollLeft = function (val) {\n        var el = this.el;\n        var direction = window.getComputedStyle(el).direction;\n        if (direction === 'rtl') {\n            switch (getRtlScrollSystem()) {\n                case 'positive':\n                    val = (val - el.clientWidth) + el.scrollWidth;\n                    break;\n                case 'reverse':\n                    val = -val;\n                    break;\n            }\n        }\n        el.scrollLeft = val;\n    };\n    /*\n    Always returns the number of pixels scrolled from the leftmost position (even if RTL).\n    Always positive.\n    */\n    EnhancedScroller.prototype.getScrollFromLeft = function () {\n        var el = this.el;\n        var direction = window.getComputedStyle(el).direction;\n        var val = el.scrollLeft;\n        if (direction === 'rtl') {\n            switch (getRtlScrollSystem()) {\n                case 'negative':\n                    val = (val - el.clientWidth) + el.scrollWidth;\n                    break;\n                case 'reverse':\n                    val = (-val - el.clientWidth) + el.scrollWidth;\n                    break;\n            }\n        }\n        return val;\n    };\n    return EnhancedScroller;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"ScrollComponent\"]));\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"EmitterMixin\"].mixInto(EnhancedScroller);\n// Horizontal Scroll System Detection\n// ----------------------------------------------------------------------------------------------\nvar _rtlScrollSystem;\nfunction getRtlScrollSystem() {\n    return _rtlScrollSystem || (_rtlScrollSystem = detectRtlScrollSystem());\n}\nfunction detectRtlScrollSystem() {\n    var el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])(\"<div style=\\\" position: absolute; top: -1000px; width: 1px; height: 1px; overflow: scroll; direction: rtl; font-size: 100px; \\\">A</div>\");\n    document.body.appendChild(el);\n    var system;\n    if (el.scrollLeft > 0) {\n        system = 'positive';\n    }\n    else {\n        el.scrollLeft = 1;\n        if (el.scrollLeft > 0) {\n            system = 'reverse';\n        }\n        else {\n            system = 'negative';\n        }\n    }\n    Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(el);\n    return system;\n}\n\n/*\nA Scroller, but with a wrapping div that allows \"clipping\" away of native scrollbars,\ngiving the appearance that there are no scrollbars.\n*/\nvar ClippedScroller = /** @class */ (function () {\n    /*\n    Received overflows can be set to 'clipped', meaning scrollbars shouldn't be visible\n    to the user, but the area should still scroll.\n    */\n    function ClippedScroller(overflowX, overflowY, parentEl) {\n        this.isHScrollbarsClipped = false;\n        this.isVScrollbarsClipped = false;\n        if (overflowX === 'clipped-scroll') {\n            overflowX = 'scroll';\n            this.isHScrollbarsClipped = true;\n        }\n        if (overflowY === 'clipped-scroll') {\n            overflowY = 'scroll';\n            this.isVScrollbarsClipped = true;\n        }\n        this.enhancedScroll = new EnhancedScroller(overflowX, overflowY);\n        parentEl.appendChild(this.el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', {\n            className: 'fc-scroller-clip'\n        }));\n        this.el.appendChild(this.enhancedScroll.el);\n    }\n    ClippedScroller.prototype.destroy = function () {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.el);\n    };\n    ClippedScroller.prototype.updateSize = function () {\n        var enhancedScroll = this.enhancedScroll;\n        var scrollEl = enhancedScroll.el;\n        var edges = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"computeEdges\"])(scrollEl);\n        var cssProps = { marginLeft: 0, marginRight: 0, marginTop: 0, marginBottom: 0 };\n        // give the inner scrolling div negative margins so that its scrollbars\n        // are nudged outside of the bounding box of the wrapper, which is overflow:hidden\n        if (this.isVScrollbarsClipped) {\n            cssProps.marginLeft = -edges.scrollbarLeft;\n            cssProps.marginRight = -edges.scrollbarRight;\n        }\n        if (this.isHScrollbarsClipped) {\n            cssProps.marginBottom = -edges.scrollbarBottom;\n        }\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(scrollEl, cssProps);\n        // if we are attempting to hide the scrollbars offscreen, OSX/iOS will still\n        // display the floating scrollbars. attach a className to force-hide them.\n        if ((this.isHScrollbarsClipped || (enhancedScroll.overflowX === 'hidden')) && // should never show?\n            (this.isVScrollbarsClipped || (enhancedScroll.overflowY === 'hidden')) && // should never show?\n            !( // doesn't have any scrollbar mass\n            edges.scrollbarLeft ||\n                edges.scrollbarRight ||\n                edges.scrollbarBottom)) {\n            scrollEl.classList.add('fc-no-scrollbars');\n        }\n        else {\n            scrollEl.classList.remove('fc-no-scrollbars');\n        }\n    };\n    ClippedScroller.prototype.setHeight = function (height) {\n        this.enhancedScroll.setHeight(height);\n    };\n    /*\n    Accounts for 'clipped' scrollbars\n    */\n    ClippedScroller.prototype.getScrollbarWidths = function () {\n        var widths = this.enhancedScroll.getScrollbarWidths();\n        if (this.isVScrollbarsClipped) {\n            widths.left = 0;\n            widths.right = 0;\n        }\n        if (this.isHScrollbarsClipped) {\n            widths.bottom = 0;\n        }\n        return widths;\n    };\n    return ClippedScroller;\n}());\n\nvar ScrollJoiner = /** @class */ (function () {\n    function ScrollJoiner(axis, scrollers) {\n        this.axis = axis;\n        this.scrollers = scrollers;\n        for (var _i = 0, _a = this.scrollers; _i < _a.length; _i++) {\n            var scroller = _a[_i];\n            this.initScroller(scroller);\n        }\n    }\n    ScrollJoiner.prototype.initScroller = function (scroller) {\n        var _this = this;\n        var enhancedScroll = scroller.enhancedScroll;\n        // when the user scrolls via mousewheel, we know for sure the target\n        // scroller should be the master. capture the various x-browser events that fire.\n        var onScroll = function () {\n            _this.assignMasterScroller(scroller);\n        };\n        'wheel mousewheel DomMouseScroll MozMousePixelScroll'.split(' ').forEach(function (evName) {\n            enhancedScroll.el.addEventListener(evName, onScroll);\n        });\n        enhancedScroll\n            .on('scrollStart', function () {\n            if (!_this.masterScroller) {\n                _this.assignMasterScroller(scroller);\n            }\n        })\n            .on('scroll', function () {\n            if (scroller === _this.masterScroller) {\n                for (var _i = 0, _a = _this.scrollers; _i < _a.length; _i++) {\n                    var otherScroller = _a[_i];\n                    if (otherScroller !== scroller) {\n                        switch (_this.axis) {\n                            case 'horizontal':\n                                otherScroller.enhancedScroll.el.scrollLeft = enhancedScroll.el.scrollLeft;\n                                break;\n                            case 'vertical':\n                                otherScroller.enhancedScroll.setScrollTop(enhancedScroll.getScrollTop());\n                                break;\n                        }\n                    }\n                }\n            }\n        })\n            .on('scrollEnd', function () {\n            if (scroller === _this.masterScroller) {\n                _this.unassignMasterScroller();\n            }\n        });\n    };\n    ScrollJoiner.prototype.assignMasterScroller = function (scroller) {\n        this.unassignMasterScroller();\n        this.masterScroller = scroller;\n        for (var _i = 0, _a = this.scrollers; _i < _a.length; _i++) {\n            var otherScroller = _a[_i];\n            if (otherScroller !== scroller) {\n                otherScroller.enhancedScroll.disableTouchScroll();\n            }\n        }\n    };\n    ScrollJoiner.prototype.unassignMasterScroller = function () {\n        if (this.masterScroller) {\n            for (var _i = 0, _a = this.scrollers; _i < _a.length; _i++) {\n                var otherScroller = _a[_i];\n                otherScroller.enhancedScroll.enableTouchScroll();\n            }\n            this.masterScroller = null;\n        }\n    };\n    ScrollJoiner.prototype.update = function () {\n        var allWidths = this.scrollers.map(function (scroller) { return scroller.getScrollbarWidths(); });\n        var maxLeft = 0;\n        var maxRight = 0;\n        var maxTop = 0;\n        var maxBottom = 0;\n        var widths;\n        var i;\n        for (var _i = 0, allWidths_1 = allWidths; _i < allWidths_1.length; _i++) {\n            widths = allWidths_1[_i];\n            maxLeft = Math.max(maxLeft, widths.left);\n            maxRight = Math.max(maxRight, widths.right);\n            maxTop = Math.max(maxTop, widths.top);\n            maxBottom = Math.max(maxBottom, widths.bottom);\n        }\n        for (i = 0; i < this.scrollers.length; i++) {\n            var scroller = this.scrollers[i];\n            widths = allWidths[i];\n            scroller.enhancedScroll.canvas.setGutters(this.axis === 'horizontal' ?\n                {\n                    left: maxLeft - widths.left,\n                    right: maxRight - widths.right\n                } :\n                {\n                    top: maxTop - widths.top,\n                    bottom: maxBottom - widths.bottom\n                });\n        }\n    };\n    return ScrollJoiner;\n}());\n\nvar HeaderBodyLayout = /** @class */ (function () {\n    /*\n    verticalScroll = 'auto' | 'clipped-scroll'\n    */\n    function HeaderBodyLayout(headerContainerEl, bodyContainerEl, verticalScroll) {\n        this.headerScroller = new ClippedScroller('clipped-scroll', 'hidden', headerContainerEl);\n        this.bodyScroller = new ClippedScroller('auto', verticalScroll, bodyContainerEl);\n        this.scrollJoiner = new ScrollJoiner('horizontal', [\n            this.headerScroller,\n            this.bodyScroller\n        ]);\n    }\n    HeaderBodyLayout.prototype.destroy = function () {\n        this.headerScroller.destroy();\n        this.bodyScroller.destroy();\n    };\n    HeaderBodyLayout.prototype.setHeight = function (totalHeight, isAuto) {\n        var bodyHeight;\n        if (isAuto) {\n            bodyHeight = 'auto';\n        }\n        else {\n            bodyHeight = totalHeight - this.queryHeadHeight();\n        }\n        this.bodyScroller.setHeight(bodyHeight);\n        this.headerScroller.updateSize(); // adjusts gutters and classNames\n        this.bodyScroller.updateSize(); // adjusts gutters and classNames\n        this.scrollJoiner.update();\n    };\n    HeaderBodyLayout.prototype.queryHeadHeight = function () {\n        return this.headerScroller.enhancedScroll.canvas.contentEl.getBoundingClientRect().height;\n    };\n    return HeaderBodyLayout;\n}());\n\nvar TimelineHeader = /** @class */ (function (_super) {\n    __extends(TimelineHeader, _super);\n    function TimelineHeader(context, parentEl) {\n        var _this = _super.call(this, context) || this;\n        parentEl.appendChild(_this.tableEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('table', {\n            className: _this.theme.getClass('tableGrid')\n        }));\n        return _this;\n    }\n    TimelineHeader.prototype.destroy = function () {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.tableEl);\n        _super.prototype.destroy.call(this);\n    };\n    TimelineHeader.prototype.render = function (props) {\n        this.renderDates(props.tDateProfile);\n    };\n    TimelineHeader.prototype.renderDates = function (tDateProfile) {\n        var _a = this, dateEnv = _a.dateEnv, theme = _a.theme;\n        var cellRows = tDateProfile.cellRows;\n        var lastRow = cellRows[cellRows.length - 1];\n        var isChrono = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMs\"])(tDateProfile.labelInterval) > Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMs\"])(tDateProfile.slotDuration);\n        var oneDay = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isSingleDay\"])(tDateProfile.slotDuration);\n        var html = '<colgroup>';\n        // needs to be a col for each body slat. header cells will have colspans\n        for (var i = tDateProfile.slotCnt - 1; i >= 0; i--) {\n            html += '<col/>';\n        }\n        html += '</colgroup>';\n        html += '<tbody>';\n        for (var _i = 0, cellRows_1 = cellRows; _i < cellRows_1.length; _i++) {\n            var rowCells = cellRows_1[_i];\n            var isLast = rowCells === lastRow;\n            html += '<tr' + (isChrono && isLast ? ' class=\"fc-chrono\"' : '') + '>';\n            for (var _b = 0, rowCells_1 = rowCells; _b < rowCells_1.length; _b++) {\n                var cell = rowCells_1[_b];\n                var headerCellClassNames = [theme.getClass('widgetHeader')];\n                if (cell.isWeekStart) {\n                    headerCellClassNames.push('fc-em-cell');\n                }\n                if (oneDay) {\n                    headerCellClassNames = headerCellClassNames.concat(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"getDayClasses\"])(cell.date, this.props.dateProfile, this.context, true) // adds \"today\" class and other day-based classes\n                    );\n                }\n                html +=\n                    '<th class=\"' + headerCellClassNames.join(' ') + '\"' +\n                        ' data-date=\"' + dateEnv.formatIso(cell.date, { omitTime: !tDateProfile.isTimeScale, omitTimeZoneOffset: true }) + '\"' +\n                        (cell.colspan > 1 ? ' colspan=\"' + cell.colspan + '\"' : '') +\n                        '>' +\n                        '<div class=\"fc-cell-content\">' +\n                        cell.spanHtml +\n                        '</div>' +\n                        '</th>';\n            }\n            html += '</tr>';\n        }\n        html += '</tbody>';\n        this.tableEl.innerHTML = html; // TODO: does this work cross-browser?\n        this.slatColEls = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.tableEl, 'col');\n        this.innerEls = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.tableEl.querySelector('tr:last-child'), // compound selector won't work because of query-root problem\n        'th .fc-cell-text');\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.tableEl.querySelectorAll('tr:not(:last-child)'), // compound selector won't work because of query-root problem\n        'th .fc-cell-text').forEach(function (innerEl) {\n            innerEl.classList.add('fc-sticky');\n        });\n    };\n    return TimelineHeader;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar TimelineSlats = /** @class */ (function (_super) {\n    __extends(TimelineSlats, _super);\n    function TimelineSlats(context, parentEl) {\n        var _this = _super.call(this, context) || this;\n        parentEl.appendChild(_this.el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', { className: 'fc-slats' }));\n        return _this;\n    }\n    TimelineSlats.prototype.destroy = function () {\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.el);\n        _super.prototype.destroy.call(this);\n    };\n    TimelineSlats.prototype.render = function (props) {\n        this.renderDates(props.tDateProfile);\n    };\n    TimelineSlats.prototype.renderDates = function (tDateProfile) {\n        var _a = this, theme = _a.theme, view = _a.view, dateEnv = _a.dateEnv;\n        var slotDates = tDateProfile.slotDates, isWeekStarts = tDateProfile.isWeekStarts;\n        var html = '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            '<colgroup>';\n        for (var i = 0; i < slotDates.length; i++) {\n            html += '<col/>';\n        }\n        html += '</colgroup>';\n        html += '<tbody><tr>';\n        for (var i = 0; i < slotDates.length; i++) {\n            html += this.slatCellHtml(slotDates[i], isWeekStarts[i], tDateProfile);\n        }\n        html += '</tr></tbody></table>';\n        this.el.innerHTML = html;\n        this.slatColEls = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.el, 'col');\n        this.slatEls = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findElements\"])(this.el, 'td');\n        for (var i = 0; i < slotDates.length; i++) {\n            view.publiclyTrigger('dayRender', [\n                {\n                    date: dateEnv.toDate(slotDates[i]),\n                    el: this.slatEls[i],\n                    view: view\n                }\n            ]);\n        }\n        this.outerCoordCache = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"PositionCache\"](this.el, this.slatEls, true, // isHorizontal\n        false // isVertical\n        );\n        // for the inner divs within the slats\n        // used for event rendering and scrollTime, to disregard slat border\n        this.innerCoordCache = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"PositionCache\"](this.el, Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"findChildren\"])(this.slatEls, 'div'), true, // isHorizontal\n        false // isVertical\n        );\n    };\n    TimelineSlats.prototype.slatCellHtml = function (date, isEm, tDateProfile) {\n        var _a = this, theme = _a.theme, dateEnv = _a.dateEnv;\n        var classes;\n        if (tDateProfile.isTimeScale) {\n            classes = [];\n            classes.push(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isInt\"])(dateEnv.countDurationsBetween(tDateProfile.normalizedRange.start, date, tDateProfile.labelInterval)) ?\n                'fc-major' :\n                'fc-minor');\n        }\n        else {\n            classes = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"getDayClasses\"])(date, this.props.dateProfile, this.context);\n            classes.push('fc-day');\n        }\n        classes.unshift(theme.getClass('widgetContent'));\n        if (isEm) {\n            classes.push('fc-em-cell');\n        }\n        return '<td class=\"' + classes.join(' ') + '\"' +\n            ' data-date=\"' + dateEnv.formatIso(date, { omitTime: !tDateProfile.isTimeScale, omitTimeZoneOffset: true }) + '\"' +\n            '><div></div></td>';\n    };\n    TimelineSlats.prototype.updateSize = function () {\n        this.outerCoordCache.build();\n        this.innerCoordCache.build();\n    };\n    TimelineSlats.prototype.positionToHit = function (leftPosition) {\n        var outerCoordCache = this.outerCoordCache;\n        var tDateProfile = this.props.tDateProfile;\n        var slatIndex = outerCoordCache.leftToIndex(leftPosition);\n        if (slatIndex != null) {\n            // somewhat similar to what TimeGrid does. consolidate?\n            var slatWidth = outerCoordCache.getWidth(slatIndex);\n            var partial = this.isRtl ?\n                (outerCoordCache.rights[slatIndex] - leftPosition) / slatWidth :\n                (leftPosition - outerCoordCache.lefts[slatIndex]) / slatWidth;\n            var localSnapIndex = Math.floor(partial * tDateProfile.snapsPerSlot);\n            var start = this.dateEnv.add(tDateProfile.slotDates[slatIndex], Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"multiplyDuration\"])(tDateProfile.snapDuration, localSnapIndex));\n            var end = this.dateEnv.add(start, tDateProfile.snapDuration);\n            return {\n                dateSpan: {\n                    range: { start: start, end: end },\n                    allDay: !this.props.tDateProfile.isTimeScale\n                },\n                dayEl: this.slatColEls[slatIndex],\n                left: outerCoordCache.lefts[slatIndex],\n                right: outerCoordCache.rights[slatIndex]\n            };\n        }\n        return null;\n    };\n    return TimelineSlats;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar MIN_AUTO_LABELS = 18; // more than `12` months but less that `24` hours\nvar MAX_AUTO_SLOTS_PER_LABEL = 6; // allows 6 10-min slots in an hour\nvar MAX_AUTO_CELLS = 200; // allows 4-days to have a :30 slot duration\n_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"config\"].MAX_TIMELINE_SLOTS = 1000;\n// potential nice values for slot-duration and interval-duration\nvar STOCK_SUB_DURATIONS = [\n    { years: 1 },\n    { months: 1 },\n    { days: 1 },\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { minutes: 10 },\n    { minutes: 5 },\n    { minutes: 1 },\n    { seconds: 30 },\n    { seconds: 15 },\n    { seconds: 10 },\n    { seconds: 5 },\n    { seconds: 1 },\n    { milliseconds: 500 },\n    { milliseconds: 100 },\n    { milliseconds: 10 },\n    { milliseconds: 1 }\n];\nfunction buildTimelineDateProfile(dateProfile, view) {\n    var dateEnv = view.dateEnv;\n    var tDateProfile = {\n        labelInterval: queryDurationOption(view, 'slotLabelInterval'),\n        slotDuration: queryDurationOption(view, 'slotDuration')\n    };\n    validateLabelAndSlot(tDateProfile, dateProfile, dateEnv); // validate after computed grid duration\n    ensureLabelInterval(tDateProfile, dateProfile, dateEnv);\n    ensureSlotDuration(tDateProfile, dateProfile, dateEnv);\n    var input = view.opt('slotLabelFormat');\n    var rawFormats = Array.isArray(input) ?\n        input\n        : (input != null) ?\n            [input]\n            :\n                computeHeaderFormats(tDateProfile, dateProfile, dateEnv, view);\n    tDateProfile.headerFormats = rawFormats.map(function (rawFormat) {\n        return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createFormatter\"])(rawFormat);\n    });\n    tDateProfile.isTimeScale = Boolean(tDateProfile.slotDuration.milliseconds);\n    var largeUnit = null;\n    if (!tDateProfile.isTimeScale) {\n        var slotUnit = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"greatestDurationDenominator\"])(tDateProfile.slotDuration).unit;\n        if (/year|month|week/.test(slotUnit)) {\n            largeUnit = slotUnit;\n        }\n    }\n    tDateProfile.largeUnit = largeUnit;\n    tDateProfile.emphasizeWeeks =\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isSingleDay\"])(tDateProfile.slotDuration) &&\n            currentRangeAs('weeks', dateProfile, dateEnv) >= 2 &&\n            !view.opt('businessHours');\n    /*\n    console.log('label interval =', timelineView.labelInterval.humanize())\n    console.log('slot duration =', timelineView.slotDuration.humanize())\n    console.log('header formats =', timelineView.headerFormats)\n    console.log('isTimeScale', timelineView.isTimeScale)\n    console.log('largeUnit', timelineView.largeUnit)\n    */\n    var rawSnapDuration = view.opt('snapDuration');\n    var snapDuration;\n    var snapsPerSlot;\n    if (rawSnapDuration) {\n        snapDuration = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createDuration\"])(rawSnapDuration);\n        snapsPerSlot = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"wholeDivideDurations\"])(tDateProfile.slotDuration, snapDuration);\n        // ^ TODO: warning if not whole?\n    }\n    if (snapsPerSlot == null) {\n        snapDuration = tDateProfile.slotDuration;\n        snapsPerSlot = 1;\n    }\n    tDateProfile.snapDuration = snapDuration;\n    tDateProfile.snapsPerSlot = snapsPerSlot;\n    // more...\n    var timeWindowMs = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMs\"])(dateProfile.maxTime) - Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMs\"])(dateProfile.minTime);\n    // TODO: why not use normalizeRange!?\n    var normalizedStart = normalizeDate(dateProfile.renderRange.start, tDateProfile, dateEnv);\n    var normalizedEnd = normalizeDate(dateProfile.renderRange.end, tDateProfile, dateEnv);\n    // apply minTime/maxTime\n    // TODO: View should be responsible.\n    if (tDateProfile.isTimeScale) {\n        normalizedStart = dateEnv.add(normalizedStart, dateProfile.minTime);\n        normalizedEnd = dateEnv.add(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"addDays\"])(normalizedEnd, -1), dateProfile.maxTime);\n    }\n    tDateProfile.timeWindowMs = timeWindowMs;\n    tDateProfile.normalizedRange = { start: normalizedStart, end: normalizedEnd };\n    var slotDates = [];\n    var date = normalizedStart;\n    while (date < normalizedEnd) {\n        if (isValidDate(date, tDateProfile, dateProfile, view)) {\n            slotDates.push(date);\n        }\n        date = dateEnv.add(date, tDateProfile.slotDuration);\n    }\n    tDateProfile.slotDates = slotDates;\n    // more...\n    var snapIndex = -1;\n    var snapDiff = 0; // index of the diff :(\n    var snapDiffToIndex = [];\n    var snapIndexToDiff = [];\n    date = normalizedStart;\n    while (date < normalizedEnd) {\n        if (isValidDate(date, tDateProfile, dateProfile, view)) {\n            snapIndex++;\n            snapDiffToIndex.push(snapIndex);\n            snapIndexToDiff.push(snapDiff);\n        }\n        else {\n            snapDiffToIndex.push(snapIndex + 0.5);\n        }\n        date = dateEnv.add(date, tDateProfile.snapDuration);\n        snapDiff++;\n    }\n    tDateProfile.snapDiffToIndex = snapDiffToIndex;\n    tDateProfile.snapIndexToDiff = snapIndexToDiff;\n    tDateProfile.snapCnt = snapIndex + 1; // is always one behind\n    tDateProfile.slotCnt = tDateProfile.snapCnt / tDateProfile.snapsPerSlot;\n    // more...\n    tDateProfile.isWeekStarts = buildIsWeekStarts(tDateProfile, dateEnv);\n    tDateProfile.cellRows = buildCellRows(tDateProfile, dateEnv, view);\n    return tDateProfile;\n}\n/*\nsnaps to appropriate unit\n*/\nfunction normalizeDate(date, tDateProfile, dateEnv) {\n    var normalDate = date;\n    if (!tDateProfile.isTimeScale) {\n        normalDate = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"startOfDay\"])(normalDate);\n        if (tDateProfile.largeUnit) {\n            normalDate = dateEnv.startOf(normalDate, tDateProfile.largeUnit);\n        }\n    }\n    return normalDate;\n}\n/*\nsnaps to appropriate unit\n*/\nfunction normalizeRange(range, tDateProfile, dateEnv) {\n    if (!tDateProfile.isTimeScale) {\n        range = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"computeVisibleDayRange\"])(range);\n        if (tDateProfile.largeUnit) {\n            var dayRange = range; // preserve original result\n            range = {\n                start: dateEnv.startOf(range.start, tDateProfile.largeUnit),\n                end: dateEnv.startOf(range.end, tDateProfile.largeUnit)\n            };\n            // if date is partially through the interval, or is in the same interval as the start,\n            // make the exclusive end be the *next* interval\n            if (range.end.valueOf() !== dayRange.end.valueOf() || range.end <= range.start) {\n                range = {\n                    start: range.start,\n                    end: dateEnv.add(range.end, tDateProfile.slotDuration)\n                };\n            }\n        }\n    }\n    return range;\n}\nfunction isValidDate(date, tDateProfile, dateProfile, view) {\n    if (view.dateProfileGenerator.isHiddenDay(date)) {\n        return false;\n    }\n    else if (tDateProfile.isTimeScale) {\n        // determine if the time is within minTime/maxTime, which may have wacky values\n        var day = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"startOfDay\"])(date);\n        var timeMs = date.valueOf() - day.valueOf();\n        var ms = timeMs - Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMs\"])(dateProfile.minTime); // milliseconds since minTime\n        ms = ((ms % 86400000) + 86400000) % 86400000; // make negative values wrap to 24hr clock\n        return ms < tDateProfile.timeWindowMs; // before the maxTime?\n    }\n    else {\n        return true;\n    }\n}\nfunction queryDurationOption(view, name) {\n    var input = view.opt(name);\n    if (input != null) {\n        return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createDuration\"])(input);\n    }\n}\nfunction validateLabelAndSlot(tDateProfile, dateProfile, dateEnv) {\n    var currentRange = dateProfile.currentRange;\n    // make sure labelInterval doesn't exceed the max number of cells\n    if (tDateProfile.labelInterval) {\n        var labelCnt = dateEnv.countDurationsBetween(currentRange.start, currentRange.end, tDateProfile.labelInterval);\n        if (labelCnt > _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"config\"].MAX_TIMELINE_SLOTS) {\n            console.warn('slotLabelInterval results in too many cells');\n            tDateProfile.labelInterval = null;\n        }\n    }\n    // make sure slotDuration doesn't exceed the maximum number of cells\n    if (tDateProfile.slotDuration) {\n        var slotCnt = dateEnv.countDurationsBetween(currentRange.start, currentRange.end, tDateProfile.slotDuration);\n        if (slotCnt > _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"config\"].MAX_TIMELINE_SLOTS) {\n            console.warn('slotDuration results in too many cells');\n            tDateProfile.slotDuration = null;\n        }\n    }\n    // make sure labelInterval is a multiple of slotDuration\n    if (tDateProfile.labelInterval && tDateProfile.slotDuration) {\n        var slotsPerLabel = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"wholeDivideDurations\"])(tDateProfile.labelInterval, tDateProfile.slotDuration);\n        if (slotsPerLabel === null || slotsPerLabel < 1) {\n            console.warn('slotLabelInterval must be a multiple of slotDuration');\n            tDateProfile.slotDuration = null;\n        }\n    }\n}\nfunction ensureLabelInterval(tDateProfile, dateProfile, dateEnv) {\n    var currentRange = dateProfile.currentRange;\n    var labelInterval = tDateProfile.labelInterval;\n    if (!labelInterval) {\n        // compute based off the slot duration\n        // find the largest label interval with an acceptable slots-per-label\n        var input = void 0;\n        if (tDateProfile.slotDuration) {\n            for (var _i = 0, STOCK_SUB_DURATIONS_1 = STOCK_SUB_DURATIONS; _i < STOCK_SUB_DURATIONS_1.length; _i++) {\n                input = STOCK_SUB_DURATIONS_1[_i];\n                var tryLabelInterval = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createDuration\"])(input);\n                var slotsPerLabel = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"wholeDivideDurations\"])(tryLabelInterval, tDateProfile.slotDuration);\n                if (slotsPerLabel !== null && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n                    labelInterval = tryLabelInterval;\n                    break;\n                }\n            }\n            // use the slot duration as a last resort\n            if (!labelInterval) {\n                labelInterval = tDateProfile.slotDuration;\n            }\n            // compute based off the view's duration\n            // find the largest label interval that yields the minimum number of labels\n        }\n        else {\n            for (var _a = 0, STOCK_SUB_DURATIONS_2 = STOCK_SUB_DURATIONS; _a < STOCK_SUB_DURATIONS_2.length; _a++) {\n                input = STOCK_SUB_DURATIONS_2[_a];\n                labelInterval = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createDuration\"])(input);\n                var labelCnt = dateEnv.countDurationsBetween(currentRange.start, currentRange.end, labelInterval);\n                if (labelCnt >= MIN_AUTO_LABELS) {\n                    break;\n                }\n            }\n        }\n        tDateProfile.labelInterval = labelInterval;\n    }\n    return labelInterval;\n}\nfunction ensureSlotDuration(tDateProfile, dateProfile, dateEnv) {\n    var currentRange = dateProfile.currentRange;\n    var slotDuration = tDateProfile.slotDuration;\n    if (!slotDuration) {\n        var labelInterval = ensureLabelInterval(tDateProfile, dateProfile, dateEnv); // will compute if necessary\n        // compute based off the label interval\n        // find the largest slot duration that is different from labelInterval, but still acceptable\n        for (var _i = 0, STOCK_SUB_DURATIONS_3 = STOCK_SUB_DURATIONS; _i < STOCK_SUB_DURATIONS_3.length; _i++) {\n            var input = STOCK_SUB_DURATIONS_3[_i];\n            var trySlotDuration = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createDuration\"])(input);\n            var slotsPerLabel = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"wholeDivideDurations\"])(labelInterval, trySlotDuration);\n            if (slotsPerLabel !== null && slotsPerLabel > 1 && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n                slotDuration = trySlotDuration;\n                break;\n            }\n        }\n        // only allow the value if it won't exceed the view's # of slots limit\n        if (slotDuration) {\n            var slotCnt = dateEnv.countDurationsBetween(currentRange.start, currentRange.end, slotDuration);\n            if (slotCnt > MAX_AUTO_CELLS) {\n                slotDuration = null;\n            }\n        }\n        // use the label interval as a last resort\n        if (!slotDuration) {\n            slotDuration = labelInterval;\n        }\n        tDateProfile.slotDuration = slotDuration;\n    }\n    return slotDuration;\n}\nfunction computeHeaderFormats(tDateProfile, dateProfile, dateEnv, view) {\n    var format1;\n    var format2;\n    var labelInterval = tDateProfile.labelInterval;\n    var unit = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"greatestDurationDenominator\"])(labelInterval).unit;\n    var weekNumbersVisible = view.opt('weekNumbers');\n    var format0 = (format1 = (format2 = null));\n    // NOTE: weekNumber computation function wont work\n    if ((unit === 'week') && !weekNumbersVisible) {\n        unit = 'day';\n    }\n    switch (unit) {\n        case 'year':\n            format0 = { year: 'numeric' }; // '2015'\n            break;\n        case 'month':\n            if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n                format0 = { year: 'numeric' }; // '2015'\n            }\n            format1 = { month: 'short' }; // 'Jan'\n            break;\n        case 'week':\n            if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n                format0 = { year: 'numeric' }; // '2015'\n            }\n            format1 = { week: 'narrow' }; // 'Wk4'\n            break;\n        case 'day':\n            if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n                format0 = { year: 'numeric', month: 'long' }; // 'January 2014'\n            }\n            else if (currentRangeAs('months', dateProfile, dateEnv) > 1) {\n                format0 = { month: 'long' }; // 'January'\n            }\n            if (weekNumbersVisible) {\n                format1 = { week: 'short' }; // 'Wk 4'\n            }\n            format2 = { weekday: 'narrow', day: 'numeric' }; // 'Su 9'\n            break;\n        case 'hour':\n            if (weekNumbersVisible) {\n                format0 = { week: 'short' }; // 'Wk 4'\n            }\n            if (currentRangeAs('days', dateProfile, dateEnv) > 1) {\n                format1 = { weekday: 'short', day: 'numeric', month: 'numeric', omitCommas: true }; // Sat 4/7\n            }\n            format2 = {\n                hour: 'numeric',\n                minute: '2-digit',\n                omitZeroMinute: true,\n                meridiem: 'short'\n            };\n            break;\n        case 'minute':\n            // sufficiently large number of different minute cells?\n            if ((Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughMinutes\"])(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n                format0 = {\n                    hour: 'numeric',\n                    meridiem: 'short'\n                };\n                format1 = function (params) {\n                    return ':' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"padStart\"])(params.date.minute, 2); // ':30'\n                };\n            }\n            else {\n                format0 = {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    meridiem: 'short'\n                };\n            }\n            break;\n        case 'second':\n            // sufficiently large number of different second cells?\n            if ((Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"asRoughSeconds\"])(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n                format0 = { hour: 'numeric', minute: '2-digit', meridiem: 'lowercase' }; // '8:30 PM'\n                format1 = function (params) {\n                    return ':' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"padStart\"])(params.date.second, 2); // ':30'\n                };\n            }\n            else {\n                format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' }; // '8:30:45 PM'\n            }\n            break;\n        case 'millisecond':\n            format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' }; // '8:30:45 PM'\n            format1 = function (params) {\n                return '.' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"padStart\"])(params.millisecond, 3);\n            };\n            break;\n    }\n    return [].concat(format0 || [], format1 || [], format2 || []);\n}\n// Compute the number of the give units in the \"current\" range.\n// Won't go more precise than days.\n// Will return `0` if there's not a clean whole interval.\nfunction currentRangeAs(unit, dateProfile, dateEnv) {\n    var range = dateProfile.currentRange;\n    var res = null;\n    if (unit === 'years') {\n        res = dateEnv.diffWholeYears(range.start, range.end);\n    }\n    else if (unit === 'months') {\n        res = dateEnv.diffWholeMonths(range.start, range.end);\n    }\n    else if (unit === 'weeks') {\n        res = dateEnv.diffWholeMonths(range.start, range.end);\n    }\n    else if (unit === 'days') {\n        res = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"diffWholeDays\"])(range.start, range.end);\n    }\n    return res || 0;\n}\nfunction buildIsWeekStarts(tDateProfile, dateEnv) {\n    var slotDates = tDateProfile.slotDates, emphasizeWeeks = tDateProfile.emphasizeWeeks;\n    var prevWeekNumber = null;\n    var isWeekStarts = [];\n    for (var _i = 0, slotDates_1 = slotDates; _i < slotDates_1.length; _i++) {\n        var slotDate = slotDates_1[_i];\n        var weekNumber = dateEnv.computeWeekNumber(slotDate);\n        var isWeekStart = emphasizeWeeks && (prevWeekNumber !== null) && (prevWeekNumber !== weekNumber);\n        prevWeekNumber = weekNumber;\n        isWeekStarts.push(isWeekStart);\n    }\n    return isWeekStarts;\n}\nfunction buildCellRows(tDateProfile, dateEnv, view) {\n    var slotDates = tDateProfile.slotDates;\n    var formats = tDateProfile.headerFormats;\n    var cellRows = formats.map(function (format) { return []; }); // indexed by row,col\n    // specifically for navclicks\n    var rowUnits = formats.map(function (format) {\n        return format.getLargestUnit ? format.getLargestUnit() : null;\n    });\n    // builds cellRows and slotCells\n    for (var i = 0; i < slotDates.length; i++) {\n        var date = slotDates[i];\n        var isWeekStart = tDateProfile.isWeekStarts[i];\n        for (var row = 0; row < formats.length; row++) {\n            var format = formats[row];\n            var rowCells = cellRows[row];\n            var leadingCell = rowCells[rowCells.length - 1];\n            var isSuperRow = (formats.length > 1) && (row < (formats.length - 1)); // more than one row and not the last\n            var newCell = null;\n            if (isSuperRow) {\n                var text = dateEnv.format(date, format);\n                if (!leadingCell || (leadingCell.text !== text)) {\n                    newCell = buildCellObject(date, text, rowUnits[row], view);\n                }\n                else {\n                    leadingCell.colspan += 1;\n                }\n            }\n            else {\n                if (!leadingCell ||\n                    Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isInt\"])(dateEnv.countDurationsBetween(tDateProfile.normalizedRange.start, date, tDateProfile.labelInterval))) {\n                    var text = dateEnv.format(date, format);\n                    newCell = buildCellObject(date, text, rowUnits[row], view);\n                }\n                else {\n                    leadingCell.colspan += 1;\n                }\n            }\n            if (newCell) {\n                newCell.weekStart = isWeekStart;\n                rowCells.push(newCell);\n            }\n        }\n    }\n    return cellRows;\n}\nfunction buildCellObject(date, text, rowUnit, view) {\n    var spanHtml = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"buildGotoAnchorHtml\"])(view, {\n        date: date,\n        type: rowUnit,\n        forceOff: !rowUnit\n    }, {\n        'class': 'fc-cell-text'\n    }, Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(text));\n    return { text: text, spanHtml: spanHtml, date: date, colspan: 1, isWeekStart: false };\n}\n\nvar TimelineNowIndicator = /** @class */ (function () {\n    function TimelineNowIndicator(headParent, bodyParent) {\n        this.headParent = headParent;\n        this.bodyParent = bodyParent;\n    }\n    TimelineNowIndicator.prototype.render = function (coord, isRtl) {\n        var styleProps = isRtl ? { right: -coord } : { left: coord };\n        this.headParent.appendChild(this.arrowEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', {\n            className: 'fc-now-indicator fc-now-indicator-arrow',\n            style: styleProps\n        }));\n        this.bodyParent.appendChild(this.lineEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', {\n            className: 'fc-now-indicator fc-now-indicator-line',\n            style: styleProps\n        }));\n    };\n    TimelineNowIndicator.prototype.unrender = function () {\n        if (this.arrowEl) {\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.arrowEl);\n        }\n        if (this.lineEl) {\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(this.lineEl);\n        }\n    };\n    return TimelineNowIndicator;\n}());\n\nvar STICKY_PROP_VAL = computeStickyPropVal(); // if null, means not supported at all\nvar IS_MS_EDGE = /Edge/.test(navigator.userAgent);\nvar IS_SAFARI = STICKY_PROP_VAL === '-webkit-sticky'; // good b/c doesn't confuse chrome\nvar STICKY_CLASSNAME = 'fc-sticky';\n/*\nuseful beyond the native position:sticky for these reasons:\n- support in IE11\n- nice centering support\n*/\nvar StickyScroller = /** @class */ (function () {\n    function StickyScroller(scroller, isRtl, isVertical) {\n        var _this = this;\n        this.usingRelative = null;\n        /*\n        known bug: called twice on init. problem when mixing with ScrollJoiner\n        */\n        this.updateSize = function () {\n            var els = Array.prototype.slice.call(_this.scroller.canvas.el.querySelectorAll('.' + STICKY_CLASSNAME));\n            var elGeoms = _this.queryElGeoms(els);\n            var viewportWidth = _this.scroller.el.clientWidth;\n            if (_this.usingRelative) {\n                var elDestinations = _this.computeElDestinations(elGeoms, viewportWidth); // read before prepPositioning\n                assignRelativePositions(els, elGeoms, elDestinations);\n            }\n            else {\n                assignStickyPositions(els, elGeoms, viewportWidth);\n            }\n        };\n        this.scroller = scroller;\n        this.usingRelative =\n            !STICKY_PROP_VAL || // IE11\n                (IS_MS_EDGE && isRtl) || // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/18883305/\n                ((IS_MS_EDGE || IS_SAFARI) && isVertical); // because doesn't work with rowspan in tables, our only vertial use\n        if (this.usingRelative) {\n            scroller.on('scrollEnd', this.updateSize);\n        }\n    }\n    StickyScroller.prototype.destroy = function () {\n        this.scroller.off('scrollEnd', this.updateSize);\n    };\n    StickyScroller.prototype.queryElGeoms = function (els) {\n        var canvasOrigin = this.scroller.canvas.el.getBoundingClientRect();\n        var elGeoms = [];\n        for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n            var el = els_1[_i];\n            var parentBound = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"translateRect\"])(el.parentNode.getBoundingClientRect(), -canvasOrigin.left, -canvasOrigin.top);\n            var elRect = el.getBoundingClientRect();\n            var computedStyles = window.getComputedStyle(el);\n            var computedTextAlign = window.getComputedStyle(el.parentNode).textAlign; // ask the parent\n            var intendedTextAlign = computedTextAlign;\n            var naturalBound = null;\n            if (computedStyles.position !== 'sticky') {\n                naturalBound = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"translateRect\"])(elRect, -canvasOrigin.left - (parseFloat(computedStyles.left) || 0), // could be 'auto'\n                -canvasOrigin.top - (parseFloat(computedStyles.top) || 0));\n            }\n            if (el.hasAttribute('data-sticky-center')) {\n                intendedTextAlign = 'center';\n            }\n            elGeoms.push({\n                parentBound: parentBound,\n                naturalBound: naturalBound,\n                elWidth: elRect.width,\n                elHeight: elRect.height,\n                computedTextAlign: computedTextAlign,\n                intendedTextAlign: intendedTextAlign\n            });\n        }\n        return elGeoms;\n    };\n    StickyScroller.prototype.computeElDestinations = function (elGeoms, viewportWidth) {\n        var viewportLeft = this.scroller.getScrollFromLeft();\n        var viewportTop = this.scroller.getScrollTop();\n        var viewportRight = viewportLeft + viewportWidth;\n        return elGeoms.map(function (elGeom) {\n            var elWidth = elGeom.elWidth, elHeight = elGeom.elHeight, parentBound = elGeom.parentBound, naturalBound = elGeom.naturalBound;\n            var destLeft; // relative to canvas topleft\n            var destTop; // \"\n            switch (elGeom.intendedTextAlign) {\n                case 'left':\n                    destLeft = viewportLeft;\n                    break;\n                case 'right':\n                    destLeft = viewportRight - elWidth;\n                    break;\n                case 'center':\n                    destLeft = (viewportLeft + viewportRight) / 2 - elWidth / 2;\n                    break;\n            }\n            destLeft = Math.min(destLeft, parentBound.right - elWidth);\n            destLeft = Math.max(destLeft, parentBound.left);\n            destTop = viewportTop;\n            destTop = Math.min(destTop, parentBound.bottom - elHeight);\n            destTop = Math.max(destTop, naturalBound.top); // better to use natural top for upper bound\n            return { left: destLeft, top: destTop };\n        });\n    };\n    return StickyScroller;\n}());\nfunction assignRelativePositions(els, elGeoms, elDestinations) {\n    els.forEach(function (el, i) {\n        var naturalBound = elGeoms[i].naturalBound;\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(el, {\n            position: 'relative',\n            left: elDestinations[i].left - naturalBound.left,\n            top: elDestinations[i].top - naturalBound.top\n        });\n    });\n}\nfunction assignStickyPositions(els, elGeoms, viewportWidth) {\n    els.forEach(function (el, i) {\n        var stickyLeft = 0;\n        if (elGeoms[i].intendedTextAlign === 'center') {\n            stickyLeft = (viewportWidth - elGeoms[i].elWidth) / 2;\n            // needs to be forced to left?\n            if (elGeoms[i].computedTextAlign === 'center') {\n                el.setAttribute('data-sticky-center', '') // remember for next queryElGeoms\n                ;\n                el.parentNode.style.textAlign = 'left';\n            }\n        }\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(el, {\n            position: STICKY_PROP_VAL,\n            left: stickyLeft,\n            right: 0,\n            top: 0\n        });\n    });\n}\nfunction computeStickyPropVal() {\n    var el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlToElement\"])('<div style=\"position:-webkit-sticky;position:sticky\"></div>');\n    var val = el.style.position;\n    if (val.indexOf('sticky') !== -1) {\n        return val;\n    }\n    else {\n        return null;\n    }\n}\n\nvar TimeAxis = /** @class */ (function (_super) {\n    __extends(TimeAxis, _super);\n    function TimeAxis(context, headerContainerEl, bodyContainerEl) {\n        var _this = _super.call(this, context) || this;\n        var layout = _this.layout = new HeaderBodyLayout(headerContainerEl, bodyContainerEl, 'auto');\n        var headerEnhancedScroller = layout.headerScroller.enhancedScroll;\n        var bodyEnhancedScroller = layout.bodyScroller.enhancedScroll;\n        // needs to go after layout, which has ScrollJoiner\n        _this.headStickyScroller = new StickyScroller(headerEnhancedScroller, _this.isRtl, false); // isVertical=false\n        _this.bodyStickyScroller = new StickyScroller(bodyEnhancedScroller, _this.isRtl, false); // isVertical=false\n        _this.header = new TimelineHeader(context, headerEnhancedScroller.canvas.contentEl);\n        _this.slats = new TimelineSlats(context, bodyEnhancedScroller.canvas.bgEl);\n        _this.nowIndicator = new TimelineNowIndicator(headerEnhancedScroller.canvas.el, bodyEnhancedScroller.canvas.el);\n        return _this;\n    }\n    TimeAxis.prototype.destroy = function () {\n        this.layout.destroy();\n        this.header.destroy();\n        this.slats.destroy();\n        this.nowIndicator.unrender();\n        this.headStickyScroller.destroy();\n        this.bodyStickyScroller.destroy();\n        _super.prototype.destroy.call(this);\n    };\n    TimeAxis.prototype.render = function (props) {\n        var tDateProfile = this.tDateProfile =\n            buildTimelineDateProfile(props.dateProfile, this.view); // TODO: cache\n        this.header.receiveProps({\n            dateProfile: props.dateProfile,\n            tDateProfile: tDateProfile\n        });\n        this.slats.receiveProps({\n            dateProfile: props.dateProfile,\n            tDateProfile: tDateProfile\n        });\n    };\n    // Now Indicator\n    // ------------------------------------------------------------------------------------------\n    TimeAxis.prototype.getNowIndicatorUnit = function (dateProfile) {\n        // yuck\n        var tDateProfile = this.tDateProfile =\n            buildTimelineDateProfile(dateProfile, this.view); // TODO: cache\n        if (tDateProfile.isTimeScale) {\n            return Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"greatestDurationDenominator\"])(tDateProfile.slotDuration).unit;\n        }\n    };\n    // will only execute if isTimeScale\n    TimeAxis.prototype.renderNowIndicator = function (date) {\n        if (Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"rangeContainsMarker\"])(this.tDateProfile.normalizedRange, date)) {\n            this.nowIndicator.render(this.dateToCoord(date), this.isRtl);\n        }\n    };\n    // will only execute if isTimeScale\n    TimeAxis.prototype.unrenderNowIndicator = function () {\n        this.nowIndicator.unrender();\n    };\n    // Sizing\n    // ------------------------------------------------------------------------------------------\n    TimeAxis.prototype.updateSize = function (isResize, totalHeight, isAuto) {\n        this.applySlotWidth(this.computeSlotWidth());\n        // adjusts gutters. do after slot widths set\n        this.layout.setHeight(totalHeight, isAuto);\n        // pretty much just queries coords. do last\n        this.slats.updateSize();\n    };\n    TimeAxis.prototype.updateStickyScrollers = function () {\n        this.headStickyScroller.updateSize();\n        this.bodyStickyScroller.updateSize();\n    };\n    TimeAxis.prototype.computeSlotWidth = function () {\n        var slotWidth = this.opt('slotWidth') || '';\n        if (slotWidth === '') {\n            slotWidth = this.computeDefaultSlotWidth(this.tDateProfile);\n        }\n        return slotWidth;\n    };\n    TimeAxis.prototype.computeDefaultSlotWidth = function (tDateProfile) {\n        var maxInnerWidth = 0; // TODO: harness core's `matchCellWidths` for this\n        this.header.innerEls.forEach(function (innerEl, i) {\n            maxInnerWidth = Math.max(maxInnerWidth, innerEl.getBoundingClientRect().width);\n        });\n        var headingCellWidth = Math.ceil(maxInnerWidth) + 1; // assume no padding, and one pixel border\n        // in TimelineView.defaults we ensured that labelInterval is an interval of slotDuration\n        // TODO: rename labelDuration?\n        var slotsPerLabel = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"wholeDivideDurations\"])(tDateProfile.labelInterval, tDateProfile.slotDuration);\n        var slotWidth = Math.ceil(headingCellWidth / slotsPerLabel);\n        var minWidth = window.getComputedStyle(this.header.slatColEls[0]).minWidth;\n        if (minWidth) {\n            minWidth = parseInt(minWidth, 10);\n            if (minWidth) {\n                slotWidth = Math.max(slotWidth, minWidth);\n            }\n        }\n        return slotWidth;\n    };\n    TimeAxis.prototype.applySlotWidth = function (slotWidth) {\n        var _a = this, layout = _a.layout, tDateProfile = _a.tDateProfile;\n        var containerWidth = '';\n        var containerMinWidth = '';\n        var nonLastSlotWidth = '';\n        if (slotWidth !== '') {\n            slotWidth = Math.round(slotWidth);\n            containerWidth = slotWidth * tDateProfile.slotDates.length;\n            containerMinWidth = '';\n            nonLastSlotWidth = slotWidth;\n            var availableWidth = layout.bodyScroller.enhancedScroll.getClientWidth();\n            if (availableWidth > containerWidth) {\n                containerMinWidth = availableWidth;\n                containerWidth = '';\n                nonLastSlotWidth = Math.floor(availableWidth / tDateProfile.slotDates.length);\n            }\n        }\n        layout.headerScroller.enhancedScroll.canvas.setWidth(containerWidth);\n        layout.headerScroller.enhancedScroll.canvas.setMinWidth(containerMinWidth);\n        layout.bodyScroller.enhancedScroll.canvas.setWidth(containerWidth);\n        layout.bodyScroller.enhancedScroll.canvas.setMinWidth(containerMinWidth);\n        if (nonLastSlotWidth !== '') {\n            this.header.slatColEls.slice(0, -1).concat(this.slats.slatColEls.slice(0, -1)).forEach(function (el) {\n                el.style.width = nonLastSlotWidth + 'px';\n            });\n        }\n    };\n    // returned value is between 0 and the number of snaps\n    TimeAxis.prototype.computeDateSnapCoverage = function (date) {\n        var _a = this, dateEnv = _a.dateEnv, tDateProfile = _a.tDateProfile;\n        var snapDiff = dateEnv.countDurationsBetween(tDateProfile.normalizedRange.start, date, tDateProfile.snapDuration);\n        if (snapDiff < 0) {\n            return 0;\n        }\n        else if (snapDiff >= tDateProfile.snapDiffToIndex.length) {\n            return tDateProfile.snapCnt;\n        }\n        else {\n            var snapDiffInt = Math.floor(snapDiff);\n            var snapCoverage = tDateProfile.snapDiffToIndex[snapDiffInt];\n            if (Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"isInt\"])(snapCoverage)) { // not an in-between value\n                snapCoverage += snapDiff - snapDiffInt; // add the remainder\n            }\n            else {\n                // a fractional value, meaning the date is not visible\n                // always round up in this case. works for start AND end dates in a range.\n                snapCoverage = Math.ceil(snapCoverage);\n            }\n            return snapCoverage;\n        }\n    };\n    // for LTR, results range from 0 to width of area\n    // for RTL, results range from negative width of area to 0\n    TimeAxis.prototype.dateToCoord = function (date) {\n        var tDateProfile = this.tDateProfile;\n        var snapCoverage = this.computeDateSnapCoverage(date);\n        var slotCoverage = snapCoverage / tDateProfile.snapsPerSlot;\n        var slotIndex = Math.floor(slotCoverage);\n        slotIndex = Math.min(slotIndex, tDateProfile.slotCnt - 1);\n        var partial = slotCoverage - slotIndex;\n        var _a = this.slats, innerCoordCache = _a.innerCoordCache, outerCoordCache = _a.outerCoordCache;\n        if (this.isRtl) {\n            return (outerCoordCache.rights[slotIndex] -\n                (innerCoordCache.getWidth(slotIndex) * partial)) - outerCoordCache.originClientRect.width;\n        }\n        else {\n            return (outerCoordCache.lefts[slotIndex] +\n                (innerCoordCache.getWidth(slotIndex) * partial));\n        }\n    };\n    TimeAxis.prototype.rangeToCoords = function (range) {\n        if (this.isRtl) {\n            return { right: this.dateToCoord(range.start), left: this.dateToCoord(range.end) };\n        }\n        else {\n            return { left: this.dateToCoord(range.start), right: this.dateToCoord(range.end) };\n        }\n    };\n    // Scrolling\n    // ------------------------------------------------------------------------------------------\n    TimeAxis.prototype.computeDateScroll = function (duration) {\n        var dateEnv = this.dateEnv;\n        var dateProfile = this.props.dateProfile;\n        var left = 0;\n        if (dateProfile) {\n            left = this.dateToCoord(dateEnv.add(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"startOfDay\"])(dateProfile.activeRange.start), // startOfDay needed?\n            duration));\n            // hack to overcome the left borders of non-first slat\n            if (!this.isRtl && left) {\n                left += 1;\n            }\n        }\n        return { left: left };\n    };\n    TimeAxis.prototype.queryDateScroll = function () {\n        var enhancedScroll = this.layout.bodyScroller.enhancedScroll;\n        return {\n            left: enhancedScroll.getScrollLeft()\n        };\n    };\n    TimeAxis.prototype.applyDateScroll = function (scroll) {\n        // TODO: lame we have to update both. use the scrolljoiner instead maybe\n        this.layout.bodyScroller.enhancedScroll.setScrollLeft(scroll.left || 0);\n        this.layout.headerScroller.enhancedScroll.setScrollLeft(scroll.left || 0);\n    };\n    return TimeAxis;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar TimelineLaneEventRenderer = /** @class */ (function (_super) {\n    __extends(TimelineLaneEventRenderer, _super);\n    function TimelineLaneEventRenderer(context, masterContainerEl, timeAxis) {\n        var _this = _super.call(this, context) || this;\n        _this.masterContainerEl = masterContainerEl;\n        _this.timeAxis = timeAxis;\n        return _this;\n    }\n    TimelineLaneEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n        var view = this.context.view;\n        var eventRange = seg.eventRange;\n        var eventDef = eventRange.def;\n        var eventUi = eventRange.ui;\n        var isDraggable = view.computeEventDraggable(eventDef, eventUi);\n        var isResizableFromStart = seg.isStart && view.computeEventStartResizable(eventDef, eventUi);\n        var isResizableFromEnd = seg.isEnd && view.computeEventEndResizable(eventDef, eventUi);\n        var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n        classes.unshift('fc-timeline-event', 'fc-h-event');\n        var timeText = this.getTimeText(eventRange);\n        return '<a class=\"' + classes.join(' ') + '\" style=\"' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"cssToStr\"])(this.getSkinCss(eventUi)) + '\"' +\n            (eventDef.url ?\n                ' href=\"' + Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(eventDef.url) + '\"' :\n                '') +\n            '>' +\n            (timeText ?\n                '<span class=\"fc-time-wrap\">' +\n                    '<span class=\"fc-time\">' +\n                    Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(timeText) +\n                    '</span>' +\n                    '</span>'\n                :\n                    '') +\n            '<span class=\"fc-title-wrap\">' +\n            '<span class=\"fc-title fc-sticky\">' +\n            (eventDef.title ? Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"htmlEscape\"])(eventDef.title) : '&nbsp;') +\n            '</span>' +\n            '</span>' +\n            (isResizableFromStart ?\n                '<div class=\"fc-resizer fc-start-resizer\"></div>' :\n                '') +\n            (isResizableFromEnd ?\n                '<div class=\"fc-resizer fc-end-resizer\"></div>' :\n                '') +\n            '</a>';\n    };\n    TimelineLaneEventRenderer.prototype.computeDisplayEventTime = function () {\n        return !this.timeAxis.tDateProfile.isTimeScale; // because times should be obvious via axis\n    };\n    TimelineLaneEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return false;\n    };\n    // Computes a default event time formatting string if `timeFormat` is not explicitly defined\n    TimelineLaneEventRenderer.prototype.computeEventTimeFormat = function () {\n        return {\n            hour: 'numeric',\n            minute: '2-digit',\n            omitZeroMinute: true,\n            meridiem: 'narrow'\n        };\n    };\n    TimelineLaneEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        if (!this.el && this.masterContainerEl) {\n            this.el = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', { className: 'fc-event-container' });\n            if (mirrorInfo) {\n                this.el.classList.add('fc-mirror-container');\n            }\n            this.masterContainerEl.appendChild(this.el);\n        }\n        if (this.el) {\n            for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n                var seg = segs_1[_i];\n                this.el.appendChild(seg.el);\n            }\n        }\n    };\n    TimelineLaneEventRenderer.prototype.detachSegs = function (segs) {\n        for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n            var seg = segs_2[_i];\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"removeElement\"])(seg.el);\n        }\n    };\n    // computes AND assigns (assigns the left/right at least). bad\n    TimelineLaneEventRenderer.prototype.computeSegSizes = function (segs) {\n        var timeAxis = this.timeAxis;\n        for (var _i = 0, segs_3 = segs; _i < segs_3.length; _i++) {\n            var seg = segs_3[_i];\n            var coords = timeAxis.rangeToCoords(seg); // works because Seg has start/end\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(seg.el, {\n                left: (seg.left = coords.left),\n                right: -(seg.right = coords.right)\n            });\n        }\n    };\n    TimelineLaneEventRenderer.prototype.assignSegSizes = function (segs) {\n        if (!this.el) {\n            return;\n        }\n        // compute seg verticals\n        for (var _i = 0, segs_4 = segs; _i < segs_4.length; _i++) {\n            var seg = segs_4[_i];\n            seg.height = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"computeHeightAndMargins\"])(seg.el);\n        }\n        this.buildSegLevels(segs); // populates above/below props for computeOffsetForSegs\n        var totalHeight = computeOffsetForSegs(segs); // also assigns seg.top\n        Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyleProp\"])(this.el, 'height', totalHeight);\n        // assign seg verticals\n        for (var _a = 0, segs_5 = segs; _a < segs_5.length; _a++) {\n            var seg = segs_5[_a];\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyleProp\"])(seg.el, 'top', seg.top);\n        }\n    };\n    TimelineLaneEventRenderer.prototype.buildSegLevels = function (segs) {\n        var segLevels = [];\n        segs = this.sortEventSegs(segs);\n        for (var _i = 0, segs_6 = segs; _i < segs_6.length; _i++) {\n            var unplacedSeg = segs_6[_i];\n            unplacedSeg.above = [];\n            // determine the first level with no collisions\n            var level = 0; // level index\n            while (level < segLevels.length) {\n                var isLevelCollision = false;\n                // determine collisions\n                for (var _a = 0, _b = segLevels[level]; _a < _b.length; _a++) {\n                    var placedSeg = _b[_a];\n                    if (timeRowSegsCollide(unplacedSeg, placedSeg)) {\n                        unplacedSeg.above.push(placedSeg);\n                        isLevelCollision = true;\n                    }\n                }\n                if (isLevelCollision) {\n                    level += 1;\n                }\n                else {\n                    break;\n                }\n            }\n            // insert into the first non-colliding level. create if necessary\n            (segLevels[level] || (segLevels[level] = []))\n                .push(unplacedSeg);\n            // record possible colliding segments below (TODO: automated test for this)\n            level += 1;\n            while (level < segLevels.length) {\n                for (var _c = 0, _d = segLevels[level]; _c < _d.length; _c++) {\n                    var belowSeg = _d[_c];\n                    if (timeRowSegsCollide(unplacedSeg, belowSeg)) {\n                        belowSeg.above.push(unplacedSeg);\n                    }\n                }\n                level += 1;\n            }\n        }\n        return segLevels;\n    };\n    return TimelineLaneEventRenderer;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"FgEventRenderer\"]));\nfunction computeOffsetForSegs(segs) {\n    var max = 0;\n    for (var _i = 0, segs_7 = segs; _i < segs_7.length; _i++) {\n        var seg = segs_7[_i];\n        max = Math.max(max, computeOffsetForSeg(seg));\n    }\n    return max;\n}\nfunction computeOffsetForSeg(seg) {\n    if ((seg.top == null)) {\n        seg.top = computeOffsetForSegs(seg.above);\n    }\n    return seg.top + seg.height;\n}\nfunction timeRowSegsCollide(seg0, seg1) {\n    return (seg0.left < seg1.right) && (seg0.right > seg1.left);\n}\n\nvar TimelineLaneFillRenderer = /** @class */ (function (_super) {\n    __extends(TimelineLaneFillRenderer, _super);\n    function TimelineLaneFillRenderer(context, masterContainerEl, timeAxis) {\n        var _this = _super.call(this, context) || this;\n        _this.masterContainerEl = masterContainerEl;\n        _this.timeAxis = timeAxis;\n        return _this;\n    }\n    TimelineLaneFillRenderer.prototype.attachSegs = function (type, segs) {\n        if (segs.length) {\n            var className = void 0;\n            if (type === 'businessHours') {\n                className = 'bgevent';\n            }\n            else {\n                className = type.toLowerCase();\n            }\n            // making a new container each time is OKAY\n            // all types of segs (background or business hours or whatever) are rendered in one pass\n            var containerEl = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"])('div', { className: 'fc-' + className + '-container' });\n            this.masterContainerEl.appendChild(containerEl);\n            for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n                var seg = segs_1[_i];\n                containerEl.appendChild(seg.el);\n            }\n            return [containerEl]; // return value\n        }\n    };\n    TimelineLaneFillRenderer.prototype.computeSegSizes = function (segs) {\n        var timeAxis = this.timeAxis;\n        for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n            var seg = segs_2[_i];\n            var coords = timeAxis.rangeToCoords(seg);\n            seg.left = coords.left;\n            seg.right = coords.right;\n        }\n    };\n    TimelineLaneFillRenderer.prototype.assignSegSizes = function (segs) {\n        for (var _i = 0, segs_3 = segs; _i < segs_3.length; _i++) {\n            var seg = segs_3[_i];\n            Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"applyStyle\"])(seg.el, {\n                left: seg.left,\n                right: -seg.right\n            });\n        }\n    };\n    return TimelineLaneFillRenderer;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"FillRenderer\"]));\n\nvar TimelineLane = /** @class */ (function (_super) {\n    __extends(TimelineLane, _super);\n    function TimelineLane(context, fgContainerEl, bgContainerEl, timeAxis) {\n        var _this = _super.call(this, context, bgContainerEl) // should el be bgContainerEl???\n         || this;\n        _this.slicer = new TimelineLaneSlicer();\n        _this.renderEventDrag = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this._renderEventDrag, _this._unrenderEventDrag);\n        _this.renderEventResize = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(_this._renderEventResize, _this._unrenderEventResize);\n        var fillRenderer = _this.fillRenderer = new TimelineLaneFillRenderer(context, bgContainerEl, timeAxis);\n        var eventRenderer = _this.eventRenderer = new TimelineLaneEventRenderer(context, fgContainerEl, timeAxis);\n        _this.mirrorRenderer = new TimelineLaneEventRenderer(context, fgContainerEl, timeAxis);\n        _this.renderBusinessHours = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'));\n        _this.renderDateSelection = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(fillRenderer.renderSegs.bind(fillRenderer, 'highlight'), fillRenderer.unrender.bind(fillRenderer, 'highlight'));\n        _this.renderBgEvents = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'));\n        _this.renderFgEvents = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer));\n        _this.renderEventSelection = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"memoizeRendering\"])(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.timeAxis = timeAxis;\n        return _this;\n    }\n    TimelineLane.prototype.render = function (props) {\n        var slicedProps = this.slicer.sliceProps(props, props.dateProfile, this.timeAxis.tDateProfile.isTimeScale ? null : props.nextDayThreshold, this, this.timeAxis);\n        this.renderBusinessHours(slicedProps.businessHourSegs);\n        this.renderDateSelection(slicedProps.dateSelectionSegs);\n        this.renderBgEvents(slicedProps.bgEventSegs);\n        this.renderFgEvents(slicedProps.fgEventSegs);\n        this.renderEventSelection(slicedProps.eventSelection);\n        this.renderEventDrag(slicedProps.eventDrag);\n        this.renderEventResize(slicedProps.eventResize);\n    };\n    TimelineLane.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderBusinessHours.unrender();\n        this.renderDateSelection.unrender();\n        this.renderBgEvents.unrender();\n        this.renderFgEvents.unrender();\n        this.renderEventSelection.unrender();\n        this.renderEventDrag.unrender();\n        this.renderEventResize.unrender();\n    };\n    TimelineLane.prototype._renderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.mirrorRenderer.renderSegs(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    TimelineLane.prototype._unrenderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.mirrorRenderer.unrender(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    TimelineLane.prototype._renderEventResize = function (state) {\n        if (state) {\n            // HACK. eventRenderer and fillRenderer both use these segs. would compete over seg.el\n            var segsForHighlight = state.segs.map(function (seg) {\n                return __assign({}, seg);\n            });\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.fillRenderer.renderSegs('highlight', segsForHighlight);\n            this.mirrorRenderer.renderSegs(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    TimelineLane.prototype._unrenderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.fillRenderer.unrender('highlight');\n            this.mirrorRenderer.unrender(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    TimelineLane.prototype.updateSize = function (isResize) {\n        var _a = this, fillRenderer = _a.fillRenderer, eventRenderer = _a.eventRenderer, mirrorRenderer = _a.mirrorRenderer;\n        fillRenderer.computeSizes(isResize);\n        eventRenderer.computeSizes(isResize);\n        mirrorRenderer.computeSizes(isResize);\n        fillRenderer.assignSizes(isResize);\n        eventRenderer.assignSizes(isResize);\n        mirrorRenderer.assignSizes(isResize);\n    };\n    return TimelineLane;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"DateComponent\"]));\nvar TimelineLaneSlicer = /** @class */ (function (_super) {\n    __extends(TimelineLaneSlicer, _super);\n    function TimelineLaneSlicer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimelineLaneSlicer.prototype.sliceRange = function (origRange, timeAxis) {\n        var tDateProfile = timeAxis.tDateProfile;\n        var dateProfile = timeAxis.props.dateProfile;\n        var normalRange = normalizeRange(origRange, tDateProfile, timeAxis.dateEnv);\n        var segs = [];\n        // protect against when the span is entirely in an invalid date region\n        if (timeAxis.computeDateSnapCoverage(normalRange.start) < timeAxis.computeDateSnapCoverage(normalRange.end)) {\n            // intersect the footprint's range with the grid's range\n            var slicedRange = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"intersectRanges\"])(normalRange, tDateProfile.normalizedRange);\n            if (slicedRange) {\n                segs.push({\n                    start: slicedRange.start,\n                    end: slicedRange.end,\n                    isStart: slicedRange.start.valueOf() === normalRange.start.valueOf() && isValidDate(slicedRange.start, tDateProfile, dateProfile, timeAxis.view),\n                    isEnd: slicedRange.end.valueOf() === normalRange.end.valueOf() && isValidDate(Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"addMs\"])(slicedRange.end, -1), tDateProfile, dateProfile, timeAxis.view)\n                });\n            }\n        }\n        return segs;\n    };\n    return TimelineLaneSlicer;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Slicer\"]));\n\nvar TimelineView = /** @class */ (function (_super) {\n    __extends(TimelineView, _super);\n    function TimelineView(context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n        _this.el.classList.add('fc-timeline');\n        if (_this.opt('eventOverlap') === false) {\n            _this.el.classList.add('fc-no-overlap');\n        }\n        _this.el.innerHTML = _this.renderSkeletonHtml();\n        _this.timeAxis = new TimeAxis(_this.context, _this.el.querySelector('thead .fc-time-area'), _this.el.querySelector('tbody .fc-time-area'));\n        _this.lane = new TimelineLane(_this.context, _this.timeAxis.layout.bodyScroller.enhancedScroll.canvas.contentEl, _this.timeAxis.layout.bodyScroller.enhancedScroll.canvas.bgEl, _this.timeAxis);\n        context.calendar.registerInteractiveComponent(_this, {\n            el: _this.timeAxis.slats.el\n        });\n        return _this;\n    }\n    TimelineView.prototype.destroy = function () {\n        this.timeAxis.destroy();\n        this.lane.destroy();\n        _super.prototype.destroy.call(this);\n        this.calendar.unregisterInteractiveComponent(this);\n    };\n    TimelineView.prototype.renderSkeletonHtml = function () {\n        var theme = this.theme;\n        return \"<table class=\\\"\" + theme.getClass('tableGrid') + \"\\\"> <thead class=\\\"fc-head\\\"> <tr> <td class=\\\"fc-time-area \" + theme.getClass('widgetHeader') + \"\\\"></td> </tr> </thead> <tbody class=\\\"fc-body\\\"> <tr> <td class=\\\"fc-time-area \" + theme.getClass('widgetContent') + \"\\\"></td> </tr> </tbody> </table>\";\n    };\n    TimelineView.prototype.render = function (props) {\n        _super.prototype.render.call(this, props); // flags for updateSize, addScroll\n        this.timeAxis.receiveProps({\n            dateProfile: props.dateProfile\n        });\n        this.lane.receiveProps(__assign({}, props, { nextDayThreshold: this.nextDayThreshold }));\n    };\n    TimelineView.prototype.updateSize = function (isResize, totalHeight, isAuto) {\n        this.timeAxis.updateSize(isResize, totalHeight, isAuto);\n        this.lane.updateSize(isResize);\n    };\n    // Now Indicator\n    // ------------------------------------------------------------------------------------------\n    TimelineView.prototype.getNowIndicatorUnit = function (dateProfile) {\n        return this.timeAxis.getNowIndicatorUnit(dateProfile);\n    };\n    TimelineView.prototype.renderNowIndicator = function (date) {\n        this.timeAxis.renderNowIndicator(date);\n    };\n    TimelineView.prototype.unrenderNowIndicator = function () {\n        this.timeAxis.unrenderNowIndicator();\n    };\n    // Scroll System\n    // ------------------------------------------------------------------------------------------\n    TimelineView.prototype.computeDateScroll = function (duration) {\n        return this.timeAxis.computeDateScroll(duration);\n    };\n    TimelineView.prototype.applyScroll = function (scroll, isResize) {\n        _super.prototype.applyScroll.call(this, scroll, isResize); // will call applyDateScroll\n        // avoid updating stickyscroll too often\n        // TODO: repeat code as ResourceTimelineView::updateSize\n        var calendar = this.calendar;\n        if (isResize || calendar.isViewUpdated || calendar.isDatesUpdated || calendar.isEventsUpdated) {\n            this.timeAxis.updateStickyScrollers();\n        }\n    };\n    TimelineView.prototype.applyDateScroll = function (scroll) {\n        this.timeAxis.applyDateScroll(scroll);\n    };\n    TimelineView.prototype.queryScroll = function () {\n        var enhancedScroll = this.timeAxis.layout.bodyScroller.enhancedScroll;\n        return {\n            top: enhancedScroll.getScrollTop(),\n            left: enhancedScroll.getScrollLeft()\n        };\n    };\n    // Hit System\n    // ------------------------------------------------------------------------------------------\n    TimelineView.prototype.buildPositionCaches = function () {\n        this.timeAxis.slats.updateSize();\n    };\n    TimelineView.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n        var slatHit = this.timeAxis.slats.positionToHit(positionLeft);\n        if (slatHit) {\n            return {\n                component: this,\n                dateSpan: slatHit.dateSpan,\n                rect: {\n                    left: slatHit.left,\n                    right: slatHit.right,\n                    top: 0,\n                    bottom: elHeight\n                },\n                dayEl: slatHit.dayEl,\n                layer: 0\n            };\n        }\n    };\n    return TimelineView;\n}(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"View\"]));\n\nvar main = Object(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"createPlugin\"])({\n    defaultView: 'timelineDay',\n    views: {\n        timeline: {\n            class: TimelineView,\n            eventResizableFromStart: true // how is this consumed for TimelineView tho?\n        },\n        timelineDay: {\n            type: 'timeline',\n            duration: { days: 1 }\n        },\n        timelineWeek: {\n            type: 'timeline',\n            duration: { weeks: 1 }\n        },\n        timelineMonth: {\n            type: 'timeline',\n            duration: { months: 1 }\n        },\n        timelineYear: {\n            type: 'timeline',\n            duration: { years: 1 }\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (main);\n\n\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/timeline/main.esm.js?");

/***/ })

};;